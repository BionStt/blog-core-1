<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="http://127.0.0.1:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://127.0.0.1:4000/" rel="alternate" type="text/html" /><updated>2016-08-11T14:41:59+01:00</updated><id>http://127.0.0.1:4000/</id><title>Ahmad Assaf’s Blog</title><subtitle>Ahmad Assaf&#39;s blog about Software Engineering, Data Science, Productivity and Web Development</subtitle><entry><title>Stepping up your dev game !</title><link href="http://127.0.0.1:4000/setting-up-a-superhero-development-environment/" rel="alternate" type="text/html" title="Stepping up your dev game !" /><published>2015-05-23T00:00:00+01:00</published><updated>2015-05-23T00:00:00+01:00</updated><id>http://127.0.0.1:4000/setting-up-a-superhero-development-environment</id><content type="html" xml:base="http://127.0.0.1:4000/setting-up-a-superhero-development-environment/">&lt;p&gt;In every developer time, there comes a time when he has to set-up his new working environment. For me, the transition from Windows powered PC to a Mac OSX powered laptop was one of the best things I did in my career. I found the openness of things you can do on a Unix based system accompanied with a solid appealing set of software.
However, setting everything the way you &lt;strong&gt;want&lt;/strong&gt; it can be time consuming, so i decided after few trials and errors to share my experience in customizing my machine and how it can be easily transferred into other machines as well.&lt;/p&gt;

&lt;h2 id=&quot;customizing-the-ui&quot;&gt;Customizing the UI&lt;/h2&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/mac-osx-desktop.png&quot;&gt;&lt;img src=&quot;/images/posts/mac-osx-desktop.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;MacOSX Custom layout and widgets&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;First, lets start with the light weight things. The desktop and general UI enhancement. I always love to show some nice widgets on my desktop, for that i am using &lt;a href=&quot;http://tracesof.net/uebersicht/&quot;&gt;Übersicht&lt;/a&gt;. I have used &lt;a href=&quot;http://projects.tynsoe.org/en/geektool/&quot;&gt;Geektool&lt;/a&gt; which basically allows you to run custom scripts and display them on the desktop, but i wasn’t at all happy with the experience of styling those “widgets” and the availability of 3rd party widgets.
&lt;strong&gt;Übersicht&lt;/strong&gt; lets you run system commands and display their output on your desktop in little containers, called widgets. Widgets are written using HTML5, which means they are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Easy to write and customize&lt;/li&gt;
  &lt;li&gt;Can show data in tables, charts, graphs … you name it&lt;/li&gt;
  &lt;li&gt;Can react to different screen sizes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is already a nice set of widgets published in the &lt;a href=&quot;http://tracesof.net/uebersicht-widgets/&quot;&gt;gallery&lt;/a&gt;. In my &lt;code class=&quot;highlighter-rouge&quot;&gt;widgets&lt;/code&gt; folder, you will find the set of widgets i am using with customized positioning and styling.&lt;/p&gt;

&lt;h3 id=&quot;widgets&quot;&gt;Widgets&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/blob/master/widgets/simple-date.coffee&quot;&gt;simple-date&lt;/a&gt; for the date and time in the middle of the screen&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/prayer.widget&quot;&gt;prayer&lt;/a&gt; to show the Muslim prayer times for my area, the green indicating the current active prayer time&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/weather.widget&quot;&gt;weather&lt;/a&gt; to show the nice weather forecast. It uses the &lt;a href=&quot;http://freegeoip.net/&quot;&gt;Free Geo IP&lt;/a&gt; API to obtain your location, and the &lt;a href=&quot;https://developer.yahoo.com/weather/&quot;&gt;Yahoo Weather API&lt;/a&gt; to obtain the weather information.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;System Stats&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/disk-usage.widget&quot;&gt;disk-usage&lt;/a&gt;: Shows disk usage for mounted disks, with the option to exclude specific disks.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/network-info.widget&quot;&gt;network-info&lt;/a&gt;: Displays current Ethernet and Wi-Fi status (connected / not connected / IP Address / Mac Address.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/public_ip.widget&quot;&gt;pubic_ip&lt;/a&gt;: Displays the current public IP address.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/swap-usage.widget&quot;&gt;swap-usage&lt;/a&gt;: Display swap file metrics for your system.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/top-cpu.widget&quot;&gt;top-cpu&lt;/a&gt;: Shows CPU usage summary.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/top-mem.widget&quot;&gt;top-mem&lt;/a&gt;: Shows a memory usage summary.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/blob/master/widgets/network-throughput.coffee.buggy&quot;&gt;network-throughput&lt;/a&gt;: Shows incoming and outgoing throughput on a user-specified network interface.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/ahmadassaf/configurations/tree/master/widgets/total-mem.widget&quot;&gt;total-mem&lt;/a&gt;: Total system memory benchmarks.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;installation&quot;&gt;Installation&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Installing Übersicht can be bone using the downloadable &lt;a href=&quot;http://tracesof.net/uebersicht/releases/Uebersicht-0.3.13.app.zip&quot;&gt;zip file&lt;/a&gt; or the recommended using would be via cask (which i will explain later) via &lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask install ubersicht&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Installing the widgets is done by copying the &lt;strong&gt;contents&lt;/strong&gt; of the widgets folder into &lt;code class=&quot;highlighter-rouge&quot;&gt;Library -&amp;gt; Application Support -&amp;gt; Übersicht -&amp;gt; widgets&lt;/code&gt;. However, what i do is i setup my widgets to be in my Github repo or dropbox folder so that they are synced and can be backed up and i link the folder directly to the desired location via &lt;code class=&quot;highlighter-rouge&quot;&gt;ln -s ~/Projects/Configurations/config/widgets/ ~/Library/Application\ Support/U¨bersicht/widgets&lt;/code&gt; where the first parameter is the location of the &lt;code class=&quot;highlighter-rouge&quot;&gt;widgets/&lt;/code&gt; folder cloned.
&lt;strong&gt;Note&lt;/strong&gt; I have included the folder link in my &lt;code class=&quot;highlighter-rouge&quot;&gt;.osx&lt;/code&gt; file, you may need to adjust the path of the first argument.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;other-widgets&quot;&gt;Other Widgets&lt;/h3&gt;

&lt;p&gt;One element that i use that is not part of Übersicht is &lt;a href=&quot;https://itunes.apple.com/us/app/dateline/id406119724?mt=12&quot;&gt;Dateline&lt;/a&gt;. It is a discrete desktop calendar with support to iCal and other calendar applications.&lt;/p&gt;

&lt;h3 id=&quot;geeklets&quot;&gt;Geeklets&lt;/h3&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;geeklets/&lt;/code&gt; folder there is a backup of the deprecated Geeklet scripts that i used with the old Geektool. If you still prefer it over Übersicht then feel free to use them.&lt;/p&gt;

&lt;h3 id=&quot;dock--desktop-icons&quot;&gt;Dock &amp;amp; Desktop Icons&lt;/h3&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;flat-icons&lt;/code&gt; you will find the set of flat icons i have used for my mounted HDD icons and the dock.
To easily change application icons, i suggest you use &lt;a href=&quot;http://www.macupdate.com/app/mac/24764/liteicon&quot;&gt;LiteIcon&lt;/a&gt; which can be also installed via my &lt;code class=&quot;highlighter-rouge&quot;&gt;caskfile.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To further customize the dock, i use &lt;a href=&quot;http://spyresoft.com/dockmod/&quot;&gt;Dockmod&lt;/a&gt; which is the most feature-rich application for dock theming with support up to OSX Yosemite in order to provide a transparent Dock background. Dockmod can be also installed via my &lt;code class=&quot;highlighter-rouge&quot;&gt;caskfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I also remove the arrow icons for aliases/shortcuts which can be done automatically when executing my &lt;code class=&quot;highlighter-rouge&quot;&gt;.osx&lt;/code&gt; file or manually by typing the following command in the terminal:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/AliasBadgeIcon.icns /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/AliasBadgeIcon_OFF.icns
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;finder&quot;&gt;Finder&lt;/h3&gt;

&lt;p&gt;Although i have the latest OSX Yosemite update, i am still unhappy with the capabilities of the Finder. I have found that &lt;a href=&quot;http://www.cocoatech.com/pathfinder/&quot;&gt;PathFinder&lt;/a&gt; is a great replacement. Just head over and you can check the list of things you can do with this great piece of software.&lt;/p&gt;

&lt;h3 id=&quot;other-tools&quot;&gt;Other Tools&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.nulana.com/flexiglass/&quot;&gt;Flexiglass&lt;/a&gt;&lt;/strong&gt;: Flexiglass features complete and convenient window management with exclusive multi-touch gestures support, offering a simple way to manage many windows on a Mac with a mouse, keyboard, trackpad, and graphics tablet. It includes different tools to move, resize, and arrange windows on the screen easily and joyfully.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.macbartender.com/&quot;&gt;Bartender&lt;/a&gt;: Bartender lets you organize your menu bar apps, by hiding them, rearranging them, or moving them to Bartender’s Bar. You can display the full menu bar, set options to have menu bar items show in the menu bar when they have updated, or have them always visible in Bartender’s Bar.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.alfredapp.com/&quot;&gt;Alfred&lt;/a&gt;&lt;/strong&gt;: Alfred saves you time when you search for files online or on your Mac. Be more productive with hotkeys, keywords and file actions at your fingertips. It is super useful with the &lt;strong&gt;powerpack&lt;/strong&gt; activated with features like clipboard history. Check also &lt;a href=&quot;http://www.deanishe.net/alfred-workflow/aw-workflows.html&quot;&gt;this set of workflows&lt;/a&gt; for more integrations.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://lightheadsw.com/caffeine/&quot;&gt;Caffeine&lt;/a&gt;&lt;/strong&gt;: Caffeine is a tiny program that puts an icon in the right side of your menu bar. Click it to prevent your Mac from automatically going to sleep, dimming the screen or starting screen savers.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/nate-parrott/Flashlight&quot;&gt;Flashlight&lt;/a&gt;&lt;/strong&gt;: Flashlight is an unofficial Spotlight API that allows you to pro grammatically process queries and add additional results. It’s very rough right now, and a horrendous hack, but a fun proof of concept.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://brawersoftware.com/products/ubar&quot;&gt;uBar&lt;/a&gt;&lt;/strong&gt;: uBar aims at replacing the Mac Dock. It helps you find the window you’re looking for at a glance. If an application has more than one window, you’ll know right away. Click that application to open the window menu, which allows you to bring any window or even just the application itself to focus. You can turn window grouping off, and all your individual windows will be shown right in uBar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;alfred-workflows&quot;&gt;Alfred Workflows&lt;/h4&gt;

&lt;p&gt;Workflows are one of the key features in Alfred v2; They provide a way for you to extend Alfred to perform the tasks you need more efficiently.&lt;/p&gt;

&lt;p&gt;For example, with a workflow, you can launch a group of applications from a hotkey, create custom search filters for frequent searches or run scripts from a keyword.&lt;/p&gt;

&lt;p&gt;The Workflows i use are (Located in the &lt;code class=&quot;highlighter-rouge&quot;&gt;workflows&lt;/code&gt; folder):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fantastical&lt;/strong&gt;: Allow for easy adding of calendar events.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kill Process&lt;/strong&gt;: When a process hangs, it’s a hassle to open Activity Monitor, search for it, and kill it. Once again, Alfred makes a repetitive task much faster.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shorten URL&lt;/strong&gt;: Shortening URLs (for tweets, emails, etc.) is a pain; you have to go to the website you want, enter your URL, wait for the transformation to occur, copy it, and move on. This allows for a quicker process across all the famous URL shorteners.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;StackOverflow&lt;/strong&gt;: Search StackOverflow questions directly.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/willfarrell/alfred-encode-decode-workflow&quot;&gt;Encode/Decode:&lt;/a&gt;&lt;/strong&gt;: Encoding and decoding a string into multiple variations&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/gharlan/alfred-github-workflow&quot;&gt;Github:&lt;/a&gt;&lt;/strong&gt; A bunch of Github commands integrations for Alfred.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Search Safari and Chrome Tabs:&lt;/strong&gt; Search tabs in Safari and Chrome (also supports WebKit, Chromium, and Chrome Canary)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hzlzh/Alfred-Workflows&quot;&gt;Workflows Reference&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;setting-up-the-machine&quot;&gt;Setting-up the Machine&lt;/h2&gt;

&lt;p&gt;Developers are very picky about their working environment. We may consolidate various &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; files tailed for our tastes over years and track the change in a version control system. It’s no secret that on the UNIX world, dotfiles play a very important part when it comes to making your terminal look good. Be it on Linux, be it on a Mac. Dotfiles are there so you can configure your favorite software to look just the way you like it.&lt;/p&gt;

&lt;p&gt;Dotfiles can be used to customize the look of the terminal, to manage bundles with Vim and saving configuration for almost anything.&lt;/p&gt;

&lt;p&gt;One thing that normally annoys me, is the fact that whenever I rebuild my machine (or build a new one) I need to copy over my dotfiles, and obviously make sure they are kept up-to-date on all my devices when I change something.&lt;/p&gt;

&lt;p&gt;My configuration consists of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mac OSX terminal with bash shell configured with a forked &lt;a href=&quot;http://github.com/ahmadassaf/bash-it&quot;&gt;bash-it&lt;/a&gt; configurations&lt;/li&gt;
  &lt;li&gt;iTerm2 terminal with zsh shell configured with a forked &lt;a href=&quot;http://github.com/ahmadassaf/oh-my-zsh&quot;&gt;oh-my-zsh&lt;/a&gt; configurations&lt;/li&gt;
  &lt;li&gt;A cloned &lt;code class=&quot;highlighter-rouge&quot;&gt;gitignore&lt;/code&gt; repo for easy fetching of &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; files into various projects&lt;/li&gt;
  &lt;li&gt;A Custom set of &lt;a href=&quot;http://github.com/ahmadassaf/dotfiles&quot;&gt;dotfiles&lt;/a&gt; for various machine-wide configurations&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;installation-1&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;First of all you will have to clone this repository into your local machine, and since there are a bunch of other git modules in this repo, you will need to recursively clone this repository and all of it children using:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone --recursive http://github.com/ahmadassaf/Configurations&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; If you have cloned without –recursive, you may find out that some folders are empty. To fix this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git submodule update --init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Afterwards you can launch the installation by running &lt;code class=&quot;highlighter-rouge&quot;&gt;sh install.sh&lt;/code&gt;. What this will do is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It will ask you if you would like to run an update using the &lt;code class=&quot;highlighter-rouge&quot;&gt;update.sh&lt;/code&gt; script. Usually this is good when you have lots of changes in your repos and you wish to fetch all the changes afterwards, but simply skip this if this is a fresh installation.&lt;/li&gt;
  &lt;li&gt;It will install the &lt;code class=&quot;highlighter-rouge&quot;&gt;oh-my-zsh&lt;/code&gt; scripts by symlinking the folder and the &lt;code class=&quot;highlighter-rouge&quot;&gt;zshrc&lt;/code&gt; into the &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; folder.&lt;/li&gt;
  &lt;li&gt;It will prompt if you wish to install &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh-syntax-highlighting&lt;/code&gt; and does that automatically.&lt;/li&gt;
  &lt;li&gt;It will install the &lt;code class=&quot;highlighter-rouge&quot;&gt;bash-it&lt;/code&gt; script files and guide throughout the installation process.&lt;/li&gt;
  &lt;li&gt;It will prompt if you would like to add the Aliases defined also to your &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh&lt;/code&gt; aliases &lt;em&gt;recommended&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;It will symlink the dotfiles into your &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; folder.&lt;/li&gt;
  &lt;li&gt;It will prompt if you wish to install type-based &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;It will prompt if you wish to install &lt;code class=&quot;highlighter-rouge&quot;&gt;grc&lt;/code&gt; for command output coloring&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It will install &lt;code class=&quot;highlighter-rouge&quot;&gt;homebrew&lt;/code&gt; and the following brew formulas:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Core Modules&lt;/strong&gt; coreutils, moreutils, findutils, binutils&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Bash, Bash plugins&lt;/strong&gt; bash, bash-completion, zsh, grc&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt; git, heroku, node, mercurial, iojs&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Git speific addons&lt;/strong&gt; git-extras, hub, bfg&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt; htop-osx, id3tool, lesspipe, ssh-copy-id, the_silver_searcher, tree, fcrackzip, foremost, ack, p7zip, pigz, pv, gnu-sed, vim, wget&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Network tools&lt;/strong&gt; dns2tcp, knock, rename, webkit2png&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-dupes&quot;&gt;Dupes&lt;/a&gt;&lt;/strong&gt; grep, screen&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It will install &lt;code class=&quot;highlighter-rouge&quot;&gt;cask&lt;/code&gt; and the following applications:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt; path-finder, alfred, cakebrew, a-better-finder-rename, fastscripts, bettertouchtool, iterm2, launchrocket, gyazo, ubersicht, dockmod, liteicon, cleanmymac, bartender, flexiglass&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Productivity&lt;/strong&gt; todoist, evernote, mendeley-desktop, fantastical, slack, screenhero&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt; sublime-text3, atom, sourcetree, github, brackets, coda, tower, transmission-remote-gui, macvim, sqlite-database-browser, lightpaper, codebox, anvil, hex-fiend, ksdiff, codekit, MAMP&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Internet, Networking&lt;/strong&gt; firefox, google-chrome, charles, dropbox, google-drive, mailbox, viber, utorrent, plex-media-server&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Misc&lt;/strong&gt; vlc, imagealpha, imageoptim, steam, the-unarchiver, spotify, handbrake&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Quick Look plugins&lt;/strong&gt; betterzipql, qlcolorcode, qlmarkdown, qlprettypatch, qlstephen, quicklook-csv, quicklook-json, quicknfo, suspicious-package, webp-quicklook&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Color pickers&lt;/strong&gt; colorpicker-developer, colorpicker-skalacolo&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;It will aggregate the &lt;code class=&quot;highlighter-rouge&quot;&gt;iTerm&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Terminal&lt;/code&gt; themes as prompt you for the name of the color scheme you want to apply and apply it for you&lt;/li&gt;
  &lt;li&gt;It will prompt if you would like to run the &lt;code class=&quot;highlighter-rouge&quot;&gt;.osx&lt;/code&gt; file which contains some system wide modifications and runs it for you.
I recommend that you read the &lt;code class=&quot;highlighter-rouge&quot;&gt;.osx&lt;/code&gt; file and enable or disable the features that you like. I also create some symlinks there for my Sublime Text 3 configurations and the widgets of Übersicht.&lt;/li&gt;
  &lt;li&gt;It will install the &lt;a href=&quot;https://github.com/ahmadassaf/powerline-fonts&quot;&gt;powerline fonts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;It will prompt if you wish to set the bash to the updated version installed by Homebrew&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;updates&quot;&gt;Updates&lt;/h2&gt;

&lt;p&gt;Simply run &lt;code class=&quot;highlighter-rouge&quot;&gt;sh update.sh&lt;/code&gt; and it will take care of the rest&lt;/p&gt;</content><category term="general" /><category term="bash" /><category term="productivity" /><summary>Setting up a proper development environment can be a tedious task. This post walks you through various configuration and automatic bash scripts that i have created to help automate setting up your development environment</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://127.0.0.1:4000/images/mac_osx_desktop.png" /></entry><entry><title>dotfiles for the public</title><link href="http://127.0.0.1:4000/dotfiles-for-the-public/" rel="alternate" type="text/html" title="dotfiles for the public" /><published>2015-05-21T00:00:00+01:00</published><updated>2015-05-21T00:00:00+01:00</updated><id>http://127.0.0.1:4000/dotfiles-for-the-public</id><content type="html" xml:base="http://127.0.0.1:4000/dotfiles-for-the-public/">&lt;h1 id=&quot;what-are-dotfiles&quot;&gt;What are Dotfiles?&lt;/h1&gt;

&lt;p&gt;If you’re not familiar with the concept of dotfiles, check out Github’s dotfiles page to learn more about them. Essentially, when someone says “dotfiles” they mean maintaining your command-line preferences in a Git repository (sort of like how I use Dropbox to manage my preference files for TextExpander, etc.) that you install on every computer.&lt;/p&gt;

&lt;p&gt;The name dotfiles refers to the fact that most of the files that perform this sort of configuration start with a dot. The Zsh configuration file, for example, is &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; The SSH configuration folder is &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh&lt;/code&gt; And so on. So the concept of “dotfiles” just means “versioning your configuration files.”&lt;/p&gt;

&lt;p&gt;Your dotfiles will help you create powerful and consistent shell shortcuts and functions, settings for your editors, color coding and layouts for your shell, preferences and authentication for ssh and mysql and other protocols, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If you want to give these dotfiles a try, you should first fork this repository, review the code, and remove things you don’t want or need. Don’t blindly use my settings unless you know what that entails. Use at your own risk!&lt;/p&gt;

&lt;h1 id=&quot;superhero-dotfiles-and-their-super-powers&quot;&gt;Superhero Dotfiles and Their Super Powers&lt;/h1&gt;

&lt;p&gt;Dotfiles are split into two main types. Those that contain a set of commands and only run once, .osx for example runs a list of commands and gives OS X super powers. Other files such as .bash_profile and .bashrc run each time you open a new Terminal session and gives your Terminal super powers.&lt;/p&gt;

&lt;p&gt;Here’s a run down of the dotfiles in my repo and a description of what they can do.&lt;/p&gt;

&lt;h2 id=&quot;bashprofile--bashrc&quot;&gt;.bash_profile / .bashrc&lt;/h2&gt;

&lt;p&gt;When you open a new Terminal session, this file is loaded by Bash. It loads in the other dotfiles &lt;code class=&quot;highlighter-rouge&quot;&gt;path,bash_prompt,exports,aliases,functions,extra&lt;/code&gt; and configures some useful settings such as auto correcting typos when using cd completion.&lt;/p&gt;

&lt;p&gt;In some instances &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; can be loaded, so this file makes sure that .bash_profile is called.&lt;/p&gt;

&lt;h2 id=&quot;path&quot;&gt;.path&lt;/h2&gt;

&lt;p&gt;This file speeds up the process of running executable files. Rather than having to cd back and forth across various paths to executable files, you can set the file paths in your .path dotilfe and then run executable files directly.&lt;/p&gt;

&lt;p&gt;Generally, this file isn’t held in the public repo as it can contain sensitive information.&lt;/p&gt;

&lt;p&gt;Here’s an example &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.path&lt;/code&gt; file that adds &lt;code class=&quot;highlighter-rouge&quot;&gt;~/utils&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH:
export PATH=&quot;$HOME/utils:$PATH&quot;&lt;/code&gt;`&lt;/p&gt;

&lt;h2 id=&quot;bashprompt&quot;&gt;.bash_prompt&lt;/h2&gt;

&lt;p&gt;Using this file you can customise and set the various colors of your Bash prompt.&lt;/p&gt;

&lt;h2 id=&quot;exports&quot;&gt;.exports&lt;/h2&gt;

&lt;p&gt;Sets environment variables, such as setting Vim as the default editor using export &lt;code class=&quot;highlighter-rouge&quot;&gt;EDITOR=&quot;sublime&quot;&lt;/code&gt; It also increases the amount of history saved, useful for backtracking over previous commands you’ve used.&lt;/p&gt;

&lt;h2 id=&quot;aliases&quot;&gt;.aliases&lt;/h2&gt;

&lt;p&gt;This file contains useful aliases to help you write less. For example, instead of typing &lt;code class=&quot;highlighter-rouge&quot;&gt;cd ..&lt;/code&gt; you can set it here to be ‘..’. Starting to like these files yet?&lt;/p&gt;

&lt;h2 id=&quot;functions&quot;&gt;.functions&lt;/h2&gt;

&lt;p&gt;Similar to aliases, except functions can take arguments.&lt;/p&gt;

&lt;p&gt;Before when I mentioned I was looking over different dotfile repos, I did mkdir to create a directory. After that, I’d then need to cd into that directory.&lt;/p&gt;

&lt;h2 id=&quot;gitconfig&quot;&gt;.gitconfig&lt;/h2&gt;

&lt;p&gt;This file is only used by Git, for example, when a git command is invoked. So although there’s an &lt;code class=&quot;highlighter-rouge&quot;&gt;.aliases&lt;/code&gt; file, those aliases are run directly.&lt;/p&gt;

&lt;h2 id=&quot;gitignore&quot;&gt;.gitignore&lt;/h2&gt;

&lt;p&gt;Set files that you’d like Git to ignore on the entire system. Yay, no more &lt;code class=&quot;highlighter-rouge&quot;&gt;.DS_Store&lt;/code&gt; being accidentally committed!&lt;/p&gt;

&lt;h2 id=&quot;gvimrc&quot;&gt;.gvimrc&lt;/h2&gt;

&lt;p&gt;A small file that improves readability for gvim.&lt;/p&gt;

&lt;h2 id=&quot;hgignore&quot;&gt;.hgignore&lt;/h2&gt;

&lt;p&gt;Simliar to .gitignore for Mercurial.&lt;/p&gt;

&lt;h2 id=&quot;hushlogin&quot;&gt;.hushlogin&lt;/h2&gt;

&lt;p&gt;In some instances, for example, when you ssh into a machine, you may be presented with a message. It might look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-_&quot;&gt;                                  | |
 _ __ ___  _   _    ___ ___   ___ | |  ___  ___ _ ____   _____ _ __
| &#39;_ ` _ \| | | |  / __/ _ \ / _ \| | / __|/ _ \ &#39;__\ \ / / _ \ &#39;__|
| | | | | | |_| | | (_| (_) | (_) | | \__ \  __/ |   \ V /  __/ |
|_| |_| |_|\__, |  \___\___/ \___/|_| |___/\___|_|    \_/ \___|_|
            __/ |
           |___/
Welcome to my cool server.
Any malicious and/or unauthorized activity is strictly forbidden.
All activity may be logged.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This file prevents this from being shown.&lt;/p&gt;

&lt;h2 id=&quot;inputrc&quot;&gt;.inputrc&lt;/h2&gt;

&lt;p&gt;Configures the ‘Readline environment’. This controls the way keys work when you’re entering a command into your shell.
An example of how I find this useful is to make tab autocomplete regardless of filename case:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set completion-ignore-case on&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;osx&quot;&gt;.osx&lt;/h2&gt;

&lt;p&gt;This is my favorite of all the dotfiles. It is run once, manually, for the commands to run and take effect. Depending on what you’ve added to this file, you may need to restart your machine.&lt;/p&gt;

&lt;p&gt;Some of the awesome things I love are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Disable the “Are you sure you want to open this application?” dialog&lt;/li&gt;
  &lt;li&gt;Check for software updates daily, not just once per week&lt;/li&gt;
  &lt;li&gt;Disable Notification Center and remove the menu bar icon&lt;/li&gt;
  &lt;li&gt;Enable access for assistive devices&lt;/li&gt;
  &lt;li&gt;Set a blazingly fast keyboard repeat rate&lt;/li&gt;
  &lt;li&gt;Finder: allow quitting via &lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ + Q&lt;/code&gt; doing so will also hide desktop icons&lt;/li&gt;
  &lt;li&gt;When performing a search, search the current folder by default&lt;/li&gt;
  &lt;li&gt;Speed up Mission Control animations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;screenrc&quot;&gt;.screenrc&lt;/h2&gt;

&lt;p&gt;If you use screen, this removes the startup message.&lt;/p&gt;

&lt;h2 id=&quot;vimrc&quot;&gt;.vimrc&lt;/h2&gt;

&lt;p&gt;I’m not that familiar with vim. However some of the things you can do with this file include enabling line numbers and adding syntax highlighting.&lt;/p&gt;

&lt;p&gt;For &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt; i have also included the &lt;a href=&quot;https://github.com/Lokaltog/powerline&quot;&gt;powerline&lt;/a&gt; visual styling which will include a status line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I haven’t included &lt;code class=&quot;highlighter-rouge&quot;&gt;powerline&lt;/code&gt; in my main installation script, so if you wish to have it, then please proceed with installing it separately with the fonts dependency.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;--user&lt;/code&gt; parameter should be removed if you got an error while installation especially if you have python installed via Homebrew.&lt;/li&gt;
  &lt;li&gt;A dependency is the &lt;a href=&quot;https://github.com/ahmadassaf/powerline-fonts&quot;&gt;powerline fonts&lt;/a&gt; pack. Installation instructions can be found directly in the repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;after installing powerline enable it by adding to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;rtp+&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/lib/python2.7/site-packages/powerline/bindings/vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This can be change &lt;strong&gt;depending on the path to the &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; directory&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;wgetrc&quot;&gt;.wgetrc&lt;/h2&gt;

&lt;p&gt;If you use wget, this adds additional settings such as changing the timeout to 60 seconds rather than the default 15 minutes. It also sets the retry to three, rather than the default 20!&lt;/p&gt;

&lt;h1 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h1&gt;

&lt;p&gt;If you notice, some files that have mentioned above don’t exist in this repo. This is because i am using the amazing &lt;a href=&quot;http://github.com/ahmadassaf/bash-it&quot;&gt;bash-it&lt;/a&gt; repo to organize those dotfiles.
I recommend you head overthere and read how to use them.d&lt;/p&gt;

&lt;h1 id=&quot;installing-the-scripts&quot;&gt;Installing the Scripts&lt;/h1&gt;

&lt;p&gt;For installing the above files outside of the workflow mentioned in the &lt;a href=&quot;http://github.com/ahmadassaf/configurations&quot;&gt;main configurations&lt;/a&gt;, you need to run the following command &lt;code class=&quot;highlighter-rouge&quot;&gt;sh install.sh&lt;/code&gt;. The command will symlink all the files in this directory into your home directory, overwriting existing files.&lt;/p&gt;

&lt;h2 id=&quot;sensible-os-x-defaults&quot;&gt;Sensible OS X defaults&lt;/h2&gt;

&lt;p&gt;When setting up a new Mac, you may want to set some sensible OS X defaults:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./.osx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;install-homebrew-formulae&quot;&gt;Install Homebrew formulae&lt;/h2&gt;

&lt;p&gt;When setting up a new Mac, you may want to install some common &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; formulae (after installing Homebrew, of course).
&lt;code class=&quot;highlighter-rouge&quot;&gt;brew bundle&lt;/code&gt; has been deprecated, thus i converted the files into executable shell ones:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install ~/.brewfile.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;you can always remove or add files based on yor preferences. You can search for brew formulas &lt;a href=&quot;http://brewformulas.org/&quot;&gt;here&lt;/a&gt; in order to add or get more information about the ones I am using.&lt;/p&gt;

&lt;p&gt;My file contains the following &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt; formulas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Core Modules&lt;/strong&gt; coreutils, moreutils, findutils, binutils&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bash, Bash plugins&lt;/strong&gt; bash, bash-completion, zsh, grc&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt; git, heroku, node, mercurial, iojs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Git speific addons&lt;/strong&gt; git-extras, hub, bfg&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt; htop-osx, id3tool, lesspipe, ssh-copy-id, the_silver_searcher, tree, fcrackzip, foremost, ack, p7zip, pigz, pv, gnu-sed, vim, wget&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Network tools&lt;/strong&gt; dns2tcp, knock, rename, webkit2png&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-dupes&quot;&gt;&lt;strong&gt;Dupes&lt;/strong&gt;&lt;/a&gt; grep, screen&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-native-apps-with-brew-cask&quot;&gt;Install native apps with &lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;You could also install native apps with &lt;a href=&quot;https://github.com/phinze/homebrew-cask&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install ~/.caskfile.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;you can always remove or add files based on yor preferences. You can search for cask formulas &lt;a href=&quot;http://caskroom.io/&quot;&gt;here&lt;/a&gt; in order to add or get more information about the ones I am using.&lt;/p&gt;

&lt;p&gt;My &lt;code class=&quot;highlighter-rouge&quot;&gt;cask&lt;/code&gt; file contains the following applications:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Utilities&lt;/strong&gt; path-finder, alfred, cakebrew, a-better-finder-rename, fastscripts, bettertouchtool, iterm2, launchrocket, gyazo, ubersicht, dockmod, liteicon, cleanmymac, bartender, flexiglass&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Productivity&lt;/strong&gt; todoist, evernote, mendeley-desktop, fantastical, slack, screenhero&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt; sublime-text3, atom, sourcetree, github, brackets, coda, tower, transmission-remote-gui, macvim, sqlite-database-browser, lightpaper,&lt;/li&gt;
  &lt;li&gt;codebox, anvil, hex-fiend, ksdiff, codekit, MAMP&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Internet, Networking&lt;/strong&gt; firefox, google-chrome, charles, dropbox, google-drive, mailbox, viber, utorrent, plex-media-server&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Misc&lt;/strong&gt; vlc, imagealpha, imageoptim, steam, the-unarchiver, spotify, handbrake&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quick Look plugins&lt;/strong&gt; betterzipql, qlcolorcode, qlmarkdown, qlprettypatch, qlstephen, quicklook-csv, quicklook-json, quicknfo, suspicious-package, webp-quicklook&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Color pickers&lt;/strong&gt; colorpicker-developer, colorpicker-skalacolo&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-npm-globals&quot;&gt;Install NPM Globals&lt;/h2&gt;

&lt;p&gt;There are a bunch of useful Node.js command line tools that can be installed globally. For that, the file &lt;code class=&quot;highlighter-rouge&quot;&gt;.npm_globals.sh&lt;/code&gt; define an array of those applications. My global npm packages are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/amok&quot;&gt;&lt;strong&gt;amok&lt;/strong&gt;&lt;/a&gt;: A free open source, editor agnostic, cross-platform command line tool for fast incremental development, testing and debugging in web browsers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bower&quot;&gt;&lt;strong&gt;bower&lt;/strong&gt;&lt;/a&gt;: Bower offers a generic, unopinionated solution to the problem of front-end package management, while exposing the package dependency model via an API that can be consumed by a more opinionated build stack&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/caniuse&quot;&gt;&lt;strong&gt;caniuse&lt;/strong&gt;&lt;/a&gt;: Compatibility validation for support of HTML5, CSS3, SVG and more in desktop and mobile browsers&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint&quot;&gt;&lt;strong&gt;eslint&lt;/strong&gt;&lt;/a&gt;: ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/grunt&quot;&gt;&lt;strong&gt;grunt&lt;/strong&gt;&lt;/a&gt;: The JavaScript Task Runner&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/imageoptim&quot;&gt;&lt;strong&gt;imageoptim&lt;/strong&gt;&lt;/a&gt;: Node.js wrapper for some images compression algorithms&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/jscs&quot;&gt;&lt;strong&gt;jscs&lt;/strong&gt;&lt;/a&gt;: JavaScript Code Style&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;strong&gt;mocha&lt;/strong&gt;&lt;/a&gt;: Simple, flexible, fun test fr**amework&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/nodemon&quot;&gt;&lt;strong&gt;nodemon&lt;/strong&gt;&lt;/a&gt;: Nodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/prettyjson&quot;&gt;&lt;strong&gt;prettyjson&lt;/strong&gt;&lt;/a&gt;: Package for formatting JSON data in a coloured YAML-style, perfect for CLI output&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/psi&quot;&gt;&lt;strong&gt;psi&lt;/strong&gt;&lt;/a&gt;: PageSpeed Insights with reporting&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/should&quot;&gt;&lt;strong&gt;should&lt;/strong&gt;&lt;/a&gt;: Should is an expressive, readable, framework-agnostic assertion library. The main goals of this library are to be expressive and to be helpful. It keeps your test code clean, and your error messages helpful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/slap&quot;&gt;&lt;strong&gt;slap&lt;/strong&gt;&lt;/a&gt;: Slap is a Sublime-like terminal-based text editor that strives to make editing from the terminal easier&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sparkly&quot;&gt;&lt;strong&gt;sparkly&lt;/strong&gt;&lt;/a&gt;: Generate sparklines&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/tmi&quot;&gt;&lt;strong&gt;tmi&lt;/strong&gt;&lt;/a&gt;: Find out the image weight in your pages, compare to the BigQuery quantiles and discover what images you can optimize further&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/vtop&quot;&gt;&lt;strong&gt;vtop&lt;/strong&gt;&lt;/a&gt;: A graphical activity monitor for the command line&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;h2 id=&quot;tutorials&quot;&gt;Tutorials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.thegeekstuff.com/2008/10/execution-sequence-for-bash_profile-bashrc-bash_login-profile-and-bash_logout/&quot;&gt;Execution sequence for .bash_profile, .bashrc, .bash_login, .profile and .bash_logout&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/tutorials/setting-up-a-mac-dev-machine-from-zero-to-hero-with-dotfiles--net-35449&quot;&gt;Setting Up a Mac Dev Machine From Zero to Hero With Dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-dotfiles-repositories&quot;&gt;Other &lt;code class=&quot;highlighter-rouge&quot;&gt;dotfiles&lt;/code&gt; repositories&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://twitter.com/mathias&quot;&gt;@Mathias Bynens&lt;/a&gt; and his &lt;a href=&quot;https://github.com/mathiasbynens/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;@ptb and &lt;a href=&quot;https://github.com/ptb/Mac-OS-X-Lion-Setup&quot;&gt;his &lt;em&gt;OS X Lion Setup&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt; and his &lt;a href=&quot;https://github.com/cowboy/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.randomsquared.com/&quot;&gt;Chris Gerke&lt;/a&gt; and his &lt;a href=&quot;http://chris-gerke.blogspot.com/2012/04/mac-osx-soe-master-image-day-7.html&quot;&gt;tutorial on creating an OS X SOE master image&lt;/a&gt; + &lt;a href=&quot;https://github.com/cgerke/Insta&quot;&gt;&lt;em&gt;Insta&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/alrra&quot;&gt;Cătălin Mariș&lt;/a&gt; and his &lt;a href=&quot;https://github.com/alrra/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gf3.ca/&quot;&gt;Gianni Chiappetta&lt;/a&gt; for sharing his &lt;a href=&quot;https://github.com/gf3/dotfiles&quot;&gt;amazing collection of dotfiles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jan.moesen.nu/&quot;&gt;Jan Moesen&lt;/a&gt; and his &lt;a href=&quot;https://gist.github.com/1156154&quot;&gt;ancient &lt;code class=&quot;highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;https://github.com/janmoesen/tilde&quot;&gt;shiny &lt;em&gt;tilde&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lri.me/&quot;&gt;Lauri ‘Lri’ Ranta&lt;/a&gt; for sharing &lt;a href=&quot;http://osxnotes.net/defaults.html&quot;&gt;loads of hidden preferences&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hotfusion.nl/&quot;&gt;Matijs Brinkhuis&lt;/a&gt; and his &lt;a href=&quot;https://github.com/matijs/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nicolasgallagher.com/&quot;&gt;Nicolas Gallagher&lt;/a&gt; and his &lt;a href=&quot;https://github.com/necolas/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sindresorhus.com/&quot;&gt;Sindre Sorhus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.sanctum.geek.nz/&quot;&gt;Tom Ryder&lt;/a&gt; and his &lt;a href=&quot;https://github.com/tejr/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kevinsuttle.com/&quot;&gt;Kevin Suttle&lt;/a&gt; and his &lt;a href=&quot;https://github.com/kevinSuttle/dotfiles&quot;&gt;dotfiles repository&lt;/a&gt; and &lt;a href=&quot;https://github.com/kevinSuttle/OSXDefaults&quot;&gt;OSXDefaults project&lt;/a&gt;, which aims to provide better documentation for &lt;a href=&quot;https://mths.be/osx&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.osx&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hkdobrev.com/&quot;&gt;Haralan Dobrev&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/holman/dotfiles&quot;&gt;Zach Holman dotfiles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://skwp.github.io/dotfiles/&quot;&gt;YADR&lt;/a&gt; YADR is an opinionated dotfile repo that will make your heart sing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eduardolundgren/dotfiles&quot;&gt;Eduardo Lundgren dotfiles&lt;/a&gt; which claims to be the first JavaScript-based dotfiles powered by Grunt.&lt;/li&gt;
&lt;/ul&gt;</content><category term="general" /><category term="bash" /><category term="productivity" /><summary>Your dotfiles will help you create powerful and consistent shell shortcuts and functions, settings for your editors, color coding and layouts for your shell, preferences and authentication for ssh and mysql and other protocols, and more</summary></entry><entry><title>RUBIX</title><link href="http://127.0.0.1:4000/rubix-a-framework-for-improving-data-integration-with-linked-data/" rel="alternate" type="text/html" title="RUBIX" /><published>2015-04-13T00:00:00+01:00</published><updated>2015-04-13T00:00:00+01:00</updated><id>http://127.0.0.1:4000/rubix-a-framework-for-improving-data-integration-with-linked-data</id><content type="html" xml:base="http://127.0.0.1:4000/rubix-a-framework-for-improving-data-integration-with-linked-data/">&lt;blockquote&gt;
  &lt;p&gt;With today’s public data sets containing billions of data items, more and more companies are looking to integrate external data with their traditional enterprise data to improve business intelligence analysis. These distributed data sources however exhibit heterogeneous data formats and terminologies and may contain noisy data. RUBIX is a novel framework that enables business users to semi-automatically perform &lt;a href=&quot;http://en.wikipedia.org/wiki/Data_integration&quot; title=&quot;Data integration&quot;&gt;data integration&lt;/a&gt; on potentially noisy tabular data. This framework offers an extension to &lt;a href=&quot;http://openrefine.org/&quot;&gt;Open Refine&lt;/a&gt; (Formerly &lt;a href=&quot;http://code.google.com/p/google-refine/&quot; title=&quot;Google Refine&quot;&gt;Google Refine&lt;/a&gt;) with novel &lt;a href=&quot;http://en.wikipedia.org/wiki/Schema_matching&quot; title=&quot;Schema matching&quot;&gt;schema matching&lt;/a&gt; algorithms leveraging Freebase rich types. First experiments show that using &lt;a href=&quot;http://en.wikipedia.org/wiki/Linked_data&quot; title=&quot;Linked data&quot;&gt;Linked Data&lt;/a&gt; to map cell values with instances and column headers with types improves significantly the quality of the matching results and therefore should lead to more informed decisions.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Companies have traditionally performed business analysis based on transactional data stored in legacy relational databases. The enterprise data available for decision makers was typically relationship management or &lt;a href=&quot;http://en.wikipedia.org/wiki/Enterprise_resource_planning&quot; title=&quot;Enterprise resource planning&quot;&gt;enterprise resource planning&lt;/a&gt; data. However social media feeds, weblogs, sensor data, or data published by governments or international organizations are nowadays becoming increasingly available.&lt;/p&gt;

&lt;p&gt;The quality and amount of structured knowledge available make it now feasible for companies to mine this huge amount of public data and integrate it in their next-generation enterprise information management systems. Analyzing this new type of data within the context of existing enterprise data should bring them new or more accurate business insights and allow better recognition of sales and market opportunities. These new distributed sources however raise tremendous challenges. They have inherently different file formats, access protocols or query languages. They possess their own data model with different ways of representing and storing the data.&lt;/p&gt;

&lt;p&gt;Data across these sources may be noisy (e.g. duplicate or inconsistent), uncertain or be semantically similar yet different. Integration and provision of a unified view for these heterogeneous and complex data structures therefore require powerful tools to map and organize the data. RUBIX is a framework that enables business users to semi-automatically combine potentially noisy data residing in heterogeneous silos. Semantically related data is identified and appropriate mappings are suggested to users. On user acceptance, data is aggregated and can be visualized directly or exported to &lt;a href=&quot;http://en.wikipedia.org/wiki/Business_intelligence&quot; title=&quot;Business intelligence&quot;&gt;Business Intelligence&lt;/a&gt; reporting tools.&lt;/p&gt;

&lt;p&gt;The framework is composed of a set of extensions to Open Refine (now called &lt;a href=&quot;http://openrefine.org/&quot;&gt;Open Refine&lt;/a&gt;) server and a plug-in to its user interface. Open Refine was selected for its extensibility as well as good cleansing and transformation capabilities. We first map cell values with instances and column headers with types from popular data sets from the Linked &lt;a href=&quot;http://en.wikipedia.org/wiki/Open_data&quot; title=&quot;Open data&quot;&gt;Open Data&lt;/a&gt; Cloud. To perform the matching, we use the Auto Mapping Core (also called AMC ) that combines the results of various similarity algorithms. The novelty of our approach resides in our exploitation of Linked Data to improve the schema matching process. We developed specific algorithms on rich types from vector algebra and statistics. The AMC generates a list of high-quality mappings from these algorithms allowing better data integration. First experiments show that Linked Data increases significantly the number of mappings suggested to the user. Schemas can also be discovered if column headers are not defined and can be improved when they are not named or typed correctly. Finally, data reconciliation can be performed regardless of data source languages or ambiguity. All these enhancements allow business users to get more valuable and higher-quality data and consequently to take more informed decisions.&lt;/p&gt;

&lt;h1 id=&quot;related-work&quot;&gt;Related Work&lt;/h1&gt;

&lt;p&gt;While schema matching has always been an active research area in data integration, new challenges are faced today by the increasing size, number and complexity of data sources and their distribution over the network. Data sets are not always correctly typed or labeled and that hinders the matching process. In the past, some work has tried to improve existing data schemas  but literature mainly covers automatic or semi-automatic labeling of anonymous data sets through Web extraction. Examples include that automatically labels news articles with a tree structure analysis or that defines heuristics based on distance and alignment of a data value and its label.&lt;/p&gt;

&lt;p&gt;These approaches are however restricting label candidates to Web content from which the data was extracted goes a step further by launching speculative queries to standard Web search engines to enlarge the set of potential candidate labels. More recently, applies machine learning techniques to respectively annotate table rows as entities, columns as their types and pairs of columns as relationships, referring to the YAGO ontology. The work presented aims however at leveraging such annotations to assist semantic search queries construction and not at improving schema matching. With the emergence of the Semantic Web, new work in the area has tried to exploit Linked Data repositories.&lt;/p&gt;

&lt;p&gt;The authors of present techniques to automatically infer a semantic model on tabular data by getting top candidates from Wikitology and classifying them with the Google page ranking algorithm. Since the authors’ goal is to export the resulting table data as Linked Data and not to improve schema matching, some columns can be labeled incorrectly, and acronyms and languages are not well handled. In the Helix project, a tagging mechanism is used to add semantic information on tabular data. A sample of instances values for each column is taken and a set of tags with scores are gathered from online sources such as Freebase. Tags are then correlated to infer annotations for the column. The mechanism is quite similar to ours but the resulting tags for the column are independent of the existing column name and sampling might not always provide a representative population of the instance values.&lt;/p&gt;

&lt;h1 id=&quot;proposition&quot;&gt;Proposition&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://openrefine.org/&quot;&gt;Open Refine&lt;/a&gt; (formerly Google Refine and Freebase Gridworks) is a tool designed to quickly and efficiently process, clean and eventually enrich large amounts of data with existing knowledge bases such as Freebase. The tool has however some limitations: it was initially designed for data cleansing on only one data set at a time, with no possibility to compose columns from different data sets. Moreover, Open Refine has some strict assumptions over the input of spreadsheets which makes it difficult to identify primitive and complex data types. The AMC is a novel framework that supports the construction and execution of new matching components or algorithms. AMC contains several matching components that can be plugged and used, like string matchers (Levenshtein, JaroWinkler … etc.), data types matchers and path matchers. It also provides a set of combination and selection algorithms to produce optimized results (weighted average, average, sigmoid … etc.).&lt;/p&gt;

&lt;h2 id=&quot;framework-architecture&quot;&gt;Framework Architecture&lt;/h2&gt;

&lt;p&gt;Open Refine makes use of a modular web application framework similar to OSGi called Butterfly. The server-side written in Java maintains states of the data (undo/redo history, long-running processes, etc.) while the client-side implemented in Javascript maintains states of the user interface (facets and their selections, view pagination, etc.). Communication between the client and server is done through REST web services.&lt;/p&gt;

&lt;h2 id=&quot;activity-flow&quot;&gt;Activity Flow&lt;/h2&gt;

&lt;p&gt;The data sets to match can be contained in files (e.g. csv, Excel spreadsheets, etc.) or defined in Open Refine projects. The inputs for the match module are the source and target files and/or projects that contain the data sets.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;These projects are imported into the internal data structure (called schema) of the AMC .&lt;/li&gt;
  &lt;li&gt;The AMC then uses a set of built-in algorithms to calculate similarities between the source and target schemas on an element basis, i.e. column names in the case of spreadsheets or relational databases.&lt;/li&gt;
  &lt;li&gt;The output is a set of similarities, each containing a triple consisting of source schema element, target element, and similarity between the two.&lt;/li&gt;
  &lt;li&gt;These results are presented to the user in tabular form such that s/he can check, correct, and potentially complete the mappings.&lt;/li&gt;
  &lt;li&gt;Once the user has completed the matching of columns, the merge information is sent back to Open Refine, which calls the merge module.&lt;/li&gt;
  &lt;li&gt;This module creates a new project, which contains a union of the two projects where the matched columns of the target project are appended to the corresponding source columns.&lt;/li&gt;
  &lt;li&gt;The user can then select the columns that s/he wants to merge and visualize by dragging and dropping the required columns onto the fields that represent the x and y axes.&lt;/li&gt;
  &lt;li&gt;Once the selection has been performed, the aggregation module merges the filtered columns and the result can then be visualized.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As aggregation operations can quickly become complex, our default aggregation module can be replaced by more advanced analytics on tabular data.&lt;/p&gt;

&lt;h2 id=&quot;schema-matching&quot;&gt;Schema Matching&lt;/h2&gt;

&lt;p&gt;Schema matching is typically used in business to business integration, metamodel matching, as well as &lt;a href=&quot;http://en.wikipedia.org/wiki/Extract,_transform,_load&quot;&gt;Extract, Transform, Load (ETL)&lt;/a&gt; processes. For non-IT specialists the typical way of comparing financial data from two different years or quarters, for example, would be to copy and paste the data from one Excel spreadsheet into another one, thus creating reduncancies and potentially introducing copy-and-paste errors. By using schema matching techniques it is possible to support this process semi-automatically, i.e. to determine which columns are similar and propose them to the user for integration. This integration can then be done with appropriate business intelligence tools to provide visualizations. One of the problems in performing the integration is the quality of data. The columns may contain data that is noisy or incorrect. There may also be no column headers to provide suitable information for matching. A number of approaches exploit the similarities of headers or similarities of types of column data. We propose a new approach that exploits semantic rich typing provided by popular datasets from the Linked Data cloud.&lt;/p&gt;

&lt;h2 id=&quot;data-reconciliation&quot;&gt;Data Reconciliation&lt;/h2&gt;

&lt;p&gt;Reconciliation enables entity resolution, i.e. matching cells with corresponding typed entities in case of tabular data. Open Refine already supports reconciliation with Freebase but requires confirmation from the user. For medium to large data sets, this can be very time-consuming. To reconcile data, we therefore first identify the columns that are candidates for reconciliation by skipping the columns containing numerical values or dates. We then use the Freebase search API to query for each cell of the source and target columns the list of typed entities candidates. Results are cached in order to be retrieved by our similarity algorithms.&lt;/p&gt;

&lt;h2 id=&quot;matching-unnamed-anduntypedcolumns&quot;&gt;Matching Unnamed and Untyped Columns&lt;/h2&gt;

&lt;p&gt;The AMC has the ability to combine the results of different matching algorithms. Its default built-in matching algorithms work on column headers and produce an overall similarity score between the compared schema elements. It has been proven that combining different algorithms greatly increases the quality of matching results. However, when headers are missing or ambiguous, the AMC can only exploit domain intersection and inclusion algorithms based on column data. We have therefore implemented three new similarity algorithms that leverage the rich types retrieved from Linked Data in order to enhance the matching results of unnamed or untyped columns.&lt;/p&gt;

&lt;h2 id=&quot;cosine-similarityhttpenwikipediaorgwikicosinesimilarity&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Cosine_similarity&quot;&gt;Cosine Similarity&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The first algorithm that we implemented is based on vector algebra. Let \(v\) be the vector of ranked candidate types returned by Freebase for each cell value of a column. Then: \[v:=\sum^K_{i=1}{a_i}*\overrightarrow{t_i}\] where \(a_i\) is the score of the entry and \(\overrightarrow{t_i}\) is the type returned by Freebase. The vector notation is chosen to indicate that each distinct answer determines one dimension in the space of results. Each cell value now has a weighted result set that can be used for aggregation to produce a result vector for the whole column. The column result \(V\) is then given by: \[V:\sum^n_{i=1}{v_i}\] We now compare the result vector of candidate types from the source column with the result vector of candidate types from the target column. Let \(W\) be the result vector for the target column, then the similarity \(s\) between the columns pair can be calculated using the absolute value of the cosine similarity function.&lt;/p&gt;

&lt;h2 id=&quot;pearson-product-moment-correlation-coefficient-ppmcchttpenwikipediaorgwikipearsonproduct-momentcorrelationcoefficient&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient&quot;&gt;Pearson Product-Moment Correlation Coefficient (PPMCC)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The second algorithm that we implemented is PPMCC, a statistical measure of the linear independence between two variables \(\left(x,y\right)\) . In our method, x is an array that represents the total scores for the source column rich types, y is an array that represents the mapped values between the source and the target columns. The values present in x but not in y are represented by zeros.&lt;/p&gt;

&lt;h2 id=&quot;spearmans-rank-correlation-coefficienthttpenwikipediaorgwikispearmansrankcorrelationcoefficient&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Spearman&#39;s_rank_correlation_coefficient&quot;&gt;Spearman’s Rank Correlation Coefficient&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The last algorithm that we implemented to match unnamed and untyped columns is Spearman’s rank correlation coefficient. It applies a rank transformation on the input data and computes PPMCC afterwards on the ranked data. In our experiments we used Natural Ranking with default strategies for handling ties and NaN values. The ranking algorithm is however configurable and can be enhanced by using more sophisticated measures.&lt;/p&gt;

&lt;h2 id=&quot;handling-non-string-values&quot;&gt;Handling Non-String Values&lt;/h2&gt;

&lt;p&gt;So far we have covered several methods to identify the similarity between “String” values, but how about other numeral values like dates, money, distance …etc. For this purpose we have implemented some basic type identifier that can recognize dates, money, numeral values, numerals used as identifiers. This will help us in better match corresponding entries. Adjusting AMC’s combination algorithms can be of great importance at this stage; for example assigning weights to different matchers and tweaking the configuration can result in more accurate results.&lt;/p&gt;

&lt;h1 id=&quot;experiments&quot;&gt;Experiments&lt;/h1&gt;

&lt;p&gt;We present in this section results from experiments we conducted using the different methods described above. To appreciate the value of our approach, we have used a real life scenario that exposes common problems faced by the management in SAP. The data we have used come from two different SAP systems; the Event tracker and the Travel Expense Manager. The Event Tracker provides an overview of events (Conferences, Internal events … etc.) that SAP Research employees contribute to or host. The entries in this system contain as much information as necessary to give an overview of the activity like the Activity type and title, travel destination, travel costs divided into several sub categories (conference fees, accommodation, transportation and others), and duration related information (departure, return dates) … etc. Entries in the Event Tracker are generally entered in batches as employees fill in their planned events that they wish to attend or contribute to at the beginning of each year. Afterwards, managers according to their allocated budget can either accept or reject these planned events. On the other hand, the Travel Expense Manager contains the actual data for the successfully accepted events. This system is used by employees to enter their actual trip details in order to claim their expenses. It contains more detailed information and aggregated views of the events, such as the total cost, duration calculated in days, currency exchange rates and lots of internal system tags and Identifiers. Matching reports from these two systems is of great benefit to managers to organize and monitor their allocated budget, they mainly want to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Find the number of the actual (accepted plans) compared with the total number of entered events.&lt;/li&gt;
  &lt;li&gt;Calculate the deviation between the estimated and actual cost of each event.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However, matching from these two sources can face several difficulties that can be classified in two domains; the first is in global labels (or column headers as we are dealing with Excel like files). These problems can be summarized in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Missing labels&lt;/strong&gt;: Importing files into Open Refine with empty headers will result in assigning that column a dummy name by concatenating the word “column” with a number starting from 0.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dummy labels or semantically unrelated names&lt;/strong&gt;: This is a common problem especially from the data coming from the Travel Expense Manager. This can be applied to columns that are labeled according to the corresponding database table (i.e. lbl_dst to denote destination label). Moreover, column labels do not often convey the semantic type of the underlying data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second domain is at cell (single entry) level; these problems can be summarized in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Detecting different date formats: We have found out that dates field coming from the two systems have different formats, moreover; the built in type detection in Open Refine converts detected date (if found) into another third format.&lt;/li&gt;
  &lt;li&gt;Entries from different people can be made in different languages.&lt;/li&gt;
  &lt;li&gt;Entries in the two systems can be incomplete, an entry can be shortened automatically by the system; for example, selecting a country in the Travel Expense Manager will result in filling out that country code in the exported report (i.e. France = FR).&lt;/li&gt;
  &lt;li&gt;Inaccurate entries: This is one of the most common problems faced; users in the some field can enter several values that correspond to the same entity. For example, in the destination column, users can enter the country, the airport at the destination, the city or even the exact location of the event (i.e. office location).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To continue reading the evaluation you can download the &lt;a href=&quot;http://ahmadassaf.com/papers/Papers/RUBIX%20A%20Framework%20for%20Improving%20Data%20Integration%20with%20Linked%20Data/RUBIX,%20A%20Framework%20for%20Improving%20Data%20Integration%20with%20Linked%20Data.pdf&quot;&gt;Full Paper Here&lt;/a&gt;&lt;/p&gt;</content><category term="Data Science" /><category term="Semantic Web" /><category term="Schema Matching" /><category term="Data Integration" /><summary>RUBIX is a framework that enables business users to semi-automatically combine potentially noisy data residing in heterogeneous silos. Semantically related data is identified and appropriate mappings are suggested to users</summary></entry><entry><title>Quora Better Notification (QBN)</title><link href="http://127.0.0.1:4000/quora-better-notifications/" rel="alternate" type="text/html" title="Quora Better Notification (QBN)" /><published>2014-05-01T00:00:00+01:00</published><updated>2014-05-01T00:00:00+01:00</updated><id>http://127.0.0.1:4000/quora-better-notifications</id><content type="html" xml:base="http://127.0.0.1:4000/quora-better-notifications/">&lt;figure style=&quot;width: 300px&quot; class=&quot;align-right&quot;&gt;
  &lt;img src=&quot;/images/posts/quora.svg&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;I have been really frustrated with the default &lt;a href=&quot;http://www.quora.com/&quot; title=&quot;Quora is your best source for knowledge.&quot;&gt;Quora&lt;/a&gt; notifications page. Hundreds of new notifications everyday, lots of them are redundant (i.e. the same question added to several topics i follow or x number of people added an answer to a question i follow). And its not only me, i have recently read &lt;a href=&quot;http://neverbefore.quora.com/A-typical-day-on-Quora-for-me-or-why-notifications-need-to-be-burned-before-they-lay-eggs&quot;&gt;A typical day on Quora for me, or why notifications need to be burned before they lay eggs&lt;/a&gt; and that actually what sparked the urge in me to develop something in the weekend to solve not only what i thought my problem, but apparently a wide agreed upon one.  I have only found &lt;a href=&quot;http://quantitativelabs.blogspot.com/2012/07/quora-notifications.html&quot;&gt;one attempt&lt;/a&gt; to fix this which is a bookmarklet that at the moment of writing this post was not functioning properly. However, some guy apparently ported that with some fixes into a Chrome extension called &lt;a href=&quot;https://chrome.google.com/webstore/detail/quora-extender/ljefnhagdgpochbjiiknhflemdnnlebh?hl=en&quot;&gt;Quora Extender&lt;/a&gt;. Although it does a good job in combining the notifications, my comments are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I don’t like the approach for the interface and packing of elements together&lt;/li&gt;
  &lt;li&gt;They don’t catch new notification fetched by the Quora infinite Scroll&lt;/li&gt;
  &lt;li&gt;They don’t provide any clustering for notifications&lt;/li&gt;
  &lt;li&gt;I cannot easily navigate through topics by any kind of filters&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;download-link&quot;&gt; &lt;a href=&quot;https://chrome.google.com/webstore/detail/doeadnmeadgfgcgplbnibocnkkngddeb&quot;&gt;Download&lt;/a&gt;&lt;/div&gt;

&lt;h3 id=&quot;discussions-about-the-issue&quot;&gt;Discussions about the issue&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.quora.com/Improving-Quora-Notifications&quot;&gt;Improving Quora Notifications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.quora.com/Notifications-on-Quora/Can-Quora-let-me-filter-out-board-notifications-from-all-the-other-ones&quot;&gt;Can Quora let me filter out board notifications from all the other ones?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.quora.com/Notifications-on-Quora&quot;&gt;Notifications on Quora&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.quora.com/Notifications-on-Quora/How-could-Quora-improve-notifications?share=1&quot;&gt;How could Quora improve notifications ?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have decided that this has to end, i want to better view my notifications. This extension is a simple one. It can identify several actions in the notifications feed:&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/quora-better-notification.png&quot;&gt;&lt;img src=&quot;/images/posts/quora-better-notification.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;Quora Better Notifications (QBN) Chrome Extension&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;New question added to a topic you follow&lt;/li&gt;
  &lt;li&gt;Replies to a some action you posted&lt;/li&gt;
  &lt;li&gt;Comments on one of your posts&lt;/li&gt;
  &lt;li&gt;Comments on one of your answers&lt;/li&gt;
  &lt;li&gt;Suggested edit to question&lt;/li&gt;
  &lt;li&gt;Asked you to answer a question&lt;/li&gt;
  &lt;li&gt;Mentioned you in a post&lt;/li&gt;
  &lt;li&gt;Wrote an answer for a question you follow&lt;/li&gt;
  &lt;li&gt;Promoted a question you asked&lt;/li&gt;
  &lt;li&gt;You have a new follower to one for your blogs&lt;/li&gt;
  &lt;li&gt;You have a new follower to one of your questions&lt;/li&gt;
  &lt;li&gt;You have a new user following you&lt;/li&gt;
  &lt;li&gt;Voted up an answer for you on some question&lt;/li&gt;
  &lt;li&gt;Thanked you for an answer or contribution&lt;/li&gt;
  &lt;li&gt;Tweeted about some of your content&lt;/li&gt;
  &lt;li&gt;Suggested to edit your bio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After Catching these notifications, i have hacked the sidebar and presented these as filters with a counter for the new ones. But doing only that is not enough for me at this point, i wanted to do some kind of clustering for some of the notification types.&lt;/p&gt;

&lt;h2 id=&quot;notifications-clustering&quot;&gt;Notifications Clustering&lt;/h2&gt;

&lt;p&gt;At the current version of the extension i only cluster two types of notifications:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;New Answer Notification&lt;/strong&gt;: Instead of having multiple entries for answers added to a question i follow, they are now clustered like User(X) and (N) others posted an answer to question you follow.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;New Questions added to a Topic: &lt;/strong&gt;It happens very often that a single question is added to multiple categories, they are now clustered like Question(X) has been added to (N) Topics : (Topic1, Topic2 … TopicN)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;future-work&quot;&gt;Future Work&lt;/h3&gt;

&lt;p&gt;I am planning to finish clustering for all the other actions. For example, the upVoting notification will be clustered in a similar fashion to Twitter’s notification: User(X) and (N) others voted up your answer …&lt;/p&gt;

&lt;h2 id=&quot;topics-filtering&quot;&gt;Topics Filtering&lt;/h2&gt;

&lt;p&gt;If you are following lots of topics, you might be interested at some point to browse only a certain topic. For that, there is a dropdown list in the top that contains a list of all the topics (fine-grained list i.e. if there is a context found in a certain topic, the context is presented) discovered in the feed.&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Quora implements an infinite scroll mechanism to fetch new notifications. I had problems trying to catch when an infinite call is done as it is not done via a normal AJAX request as i could not intercept that by assigning a hook on the &lt;code class=&quot;highlighter-rouge&quot;&gt;ajax.success()&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;ajax.complete()&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt;. So at the moment, there is function that runs on intervals of 5 seconds that will check for new notifications fetched by Quora and then applies the clustering and cleaning.&lt;/li&gt;
  &lt;li&gt;This is a very early prototype that was during a weekend, so please try it out and i will appreciate any feedback&lt;/li&gt;
  &lt;li&gt;I will be keen on porting this plugin into a Bookmarklet if requested&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;download-link&quot;&gt; &lt;a href=&quot;https://chrome.google.com/webstore/detail/doeadnmeadgfgcgplbnibocnkkngddeb&quot;&gt;Download&lt;/a&gt;&lt;/div&gt;</content><category term="projects" /><category term="Chrome Extension" /><summary>I have been really frustrated with the default Quora notifications page. Hundreds of new notifications everyday, lots of them are redundant (i.e. the same question added to several topics i follow or x number of people added an answer to a question i follow). And its not only me, i have recently read A typical day on Quora for me, or why notifications need to be burned before they lay eggs and that actually what sparked the urge in me to develop something in the weekend to solve not only what i thought my problem, but apparently a wide-agreed-upon one</summary></entry><entry><title>Everything you need to know about RDF</title><link href="http://127.0.0.1:4000/everything-you-need-to-know-about-rdf/" rel="alternate" type="text/html" title="Everything you need to know about RDF" /><published>2014-02-22T00:00:00+00:00</published><updated>2014-02-22T00:00:00+00:00</updated><id>http://127.0.0.1:4000/everything-you-need-to-know-about-rdf</id><content type="html" xml:base="http://127.0.0.1:4000/everything-you-need-to-know-about-rdf/">&lt;p&gt;Humans share, consume and produce knowledge using natural language; however presenting this knowledge in a machine readable and understandable format can be difficult. Lets take for example the fact that &lt;strong&gt;I (Ahmad) have (owner of ) a blog (http://ahmadassaf.com/blog)&lt;/strong&gt;. In natural language i can easily express that. If i want to convert this into &lt;a href=&quot;http://en.wikipedia.org/wiki/XML&quot; title=&quot;XML&quot;&gt;XML&lt;/a&gt; which is one of the most popular data representation (markup) language, i can have the following representations:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Presentation Method (1) --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;blog&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;Ahmad&lt;span class=&quot;nt&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;address&amp;gt;&lt;/span&gt;http://ahmadassaf.com/blog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/address&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blog&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Presentation Method  (2)--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;person&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ahmad&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;blog&amp;gt;&lt;/span&gt;http://ahmadassaf.com/blog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blog&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Presentation Method  (3)--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;person&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ahmad&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;blog=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, this doesn’t come intuitively to humans as they are used to present statements generally in a systematic fashion of &lt;code class=&quot;highlighter-rouge&quot;&gt;Subject - Verb/Predicate/Action - Object &lt;/code&gt;From this thought, the idea of presenting knowledge in a three parts form was the basis of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Resource_Description_Framework&quot;&gt;Resource Description Framework (RDF)&lt;/a&gt;, where i can represent the following example saying that:&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-1.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This is an intuitive knowledge representation using directed graphs, where the subjects and objects are the nodes and the predicates are the edges of that graph. This statement that comprises of these three parts is called RDF-Triple where the resource is a URI or a blank (empty) node, the property is a URI and the object can be a URI, literal or a &lt;a href=&quot;http://en.wikipedia.org/wiki/Blank_node&quot; title=&quot;Blank node&quot;&gt;Blank Node&lt;/a&gt;. If we wish to transform this knowledge into the traditional relational model (tables) it will look like:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Subject&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Predicate&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ahmad&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;has a blog&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;http://ahmadassaf.com/blog&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;constituentsof-an-rdf-triple&quot;&gt;Constituents of an RDF Triple&lt;/h2&gt;

&lt;h3 id=&quot;uris&quot;&gt;URIs&lt;/h3&gt;

&lt;p&gt;A Unique referenceable URI.  A &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_identifier&quot; title=&quot;Uniform resource identifier&quot;&gt;URI reference&lt;/a&gt; is a Unicode string that does not contain any control characters and would produce a valid URI character sequence representing an absolute URI with optional &lt;a href=&quot;http://en.wikipedia.org/wiki/Fragment_identifier&quot; title=&quot;Fragment identifier&quot;&gt;fragment identifier&lt;/a&gt; when subjected to the encoding that consists of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;encoding the Unicode string as &lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot; title=&quot;UTF-8&quot;&gt;UTF-8&lt;/a&gt; giving a sequence of octet values.&lt;/li&gt;
  &lt;li&gt;%-escaping octets that do not correspond to permitted &lt;a href=&quot;http://en.wikipedia.org/wiki/ASCII&quot; title=&quot;ASCII&quot;&gt;US-ASCII&lt;/a&gt; characters.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;literals&quot;&gt;Literals&lt;/h3&gt;

&lt;p&gt;Simple Strings that describe data values that do not have a separate existence. They can be plain (simple string combined with an optional language tag) or typed (string combined with a datatype URI and an optional language tag). Typed Literals are expressed via the XML Schema data types. Whenever we are using URIs to describe things in RDF we try as much as we can to reuse existing namespaces and for literals we use the XML Schema defined in &lt;a href=&quot;http://www.w3.org/2001/XMLSchema#&quot;&gt;http://www.w3.org/2001/XMLSchema#&lt;/a&gt;.  So for example if i want to define a literal as a &lt;a href=&quot;http://en.wikipedia.org/wiki/String_%28computer_science%29&quot; title=&quot;String (computer science)&quot;&gt;String&lt;/a&gt; i use the following syntax :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Semantics&quot;^^&amp;lt;http://www.w3.org/2001/XMLSchema#String&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We should note that literals are wrapped with quotations marks. The hash after the [highlight text=”XMLSchema ”] URI denotes the fragment identifier that points to String. In addition to these i can specify a language tag the describes the “natural” language of the text. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Semantic&quot;@en&lt;/code&gt; which means that this literal is an English world. Literals are written either using double-quotes when they do not contain linebreaks like &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;simple literal&quot;&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&quot;long literal&quot;&quot;&quot;&lt;/code&gt; when they may contain linebreaks. Datatypes are a bit tricky. Let’s think of the datatype for &lt;a href=&quot;http://en.wikipedia.org/wiki/Floating_point&quot; title=&quot;Floating point&quot;&gt;floating-point numbers&lt;/a&gt;. At an abstract level, the floating-point numbers themselves are different from the text we use to represent them on paper. For instance, the text “5.1” represents the number 5.1, but so does “5.1000” and “05.10”. Here there are multiple textual representations — what are called lexical representations — for the same value. A datatype tells us how to map lexical representations to values, and vice versa. RDF reuses the  [highlight text=”XML Schema (W3C)”] datatypes, including &lt;code class=&quot;highlighter-rouge&quot;&gt;xsd:string, xsd:float, xsd:double, xsd:integer, and xsd:date&lt;/code&gt; RDF can also contain custom datatypes that (you guessed it!) are simply named with a URI. If you omit a datatype declaration it be considered as a plain literal by many RDF tools, &lt;strong&gt;which is not the same thing as a string&lt;/strong&gt;. However, as of RDF 1.1 (still in development at the time of writing) this distinction is going away, so going forward you should be able to treat &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Rob Gonzalez&quot;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Rob Gonzalez^^xsd:string&lt;/code&gt; as equivalent, and many tools already do. The semantics of RDF takes language tags and datatypes into account. This means two things. First, a literal value without either a language tag or datatype is different from a literal with a language tag and is different from a literal with a datatype. These four statements say four different things and none can be inferred from the others:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ahmad foaf:name &quot;ahmad assaf&quot;                   ahmad&#39;s name is a lanaguage-less,datatype-less raw text value.
#ahmad foaf:name &quot;ahmad assaf&quot;@en                ahmad&#39;s name, in English, is ahmad assaf.
#ahmad foaf:name &quot;ahmed assef&quot;@fr                ahmad&#39;s name, in French, is ahmed assef.
#ahmad foaf:name &quot;ahmad assaf&quot;^^xsd:string       ahmad&#39;s name is a string.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So, an untyped literal with or without a language tag is not the same as a typed literal. The second part of the semantics of literals is that two typed literals that appear different may be the same if their datatype maps their &lt;strong&gt;lexical representations&lt;/strong&gt; to the same value. The following statements are equivalent (at least for an RDF application that has been given the semantics of the XSD datatypes):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ahmad ex:age &quot;20&quot;^^xsd:float
#ahmad ex:age &quot;20.000&quot;^^xsd:float
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These mean ahmad age is 20. That is, the textual representation of the number is besides the point and is not part of the meaning encoded by the triples. Note that if the float datatype were not specified, the triples would not be inherently equivalent, and the textual representation of the 20 would be maintained as part of the information content. Sometimes the value of a property needs to be a fragment of XML, or text that might contain XML markup. RDF/XML provides a special notation to make it easy to write literals of this kind. This is done using a third value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:parseType&lt;/code&gt; attribute. Giving an element the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:parseType=&quot;Literal&quot;&lt;/code&gt; indicates that the contents of the element are to be interpreted as an XML fragment&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;rdf:Description rdf:ID=&quot;ahmadassaf&quot;&amp;gt;
     &amp;lt;foaf:name rdf:parseType=&quot;Literal&quot;&amp;gt;
          &amp;lt;span xml:lang=&quot;en&quot;&amp;gt;The &amp;lt;em&amp;gt;Owner&amp;lt;/em&amp;gt; of this Blog &amp;lt;/span&amp;gt;
     &amp;lt;/foaf:name&amp;gt;
&amp;lt;/rdf:Description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;in Turtle notation the type used to describe XML literals is &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:XMLLiteral&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;blank-nodes&quot;&gt;Blank Nodes&lt;/h3&gt;

&lt;p&gt;Subjects or Objects can be modeled as blank nodes. They denote the existence of an individual with specific attributes but without providing any information about identity or reference. A &lt;strong&gt;Ground RDF Graph&lt;/strong&gt; is a graph where there is no &lt;strong&gt;Blank Nodes&lt;/strong&gt; .&lt;/p&gt;

&lt;h2 id=&quot;rdf-representation&quot;&gt;RDF Representation&lt;/h2&gt;

&lt;p&gt;RDF Resources can be in principle anything that must be uniquely identified and referenced by a URI. The Description of sources is done via representing properties and relationships among sources; this representation can be done in several ways:&lt;/p&gt;

&lt;h3 id=&quot;labeled-directed-graph&quot;&gt;Labeled Directed Graph&lt;/h3&gt;

&lt;p&gt;This is a visual way of modeling RD as a Node-Edge-Node Triple. Its directed as the direction of the edge is significant and always points towards the object&lt;/p&gt;

&lt;h3 id=&quot;xml-rdf-notation&quot;&gt;XML RDF Notation&lt;/h3&gt;

&lt;p&gt;Using XML syntax to represent RDF triples. We should point out that we do use namespaces in order to minimize the writing that we have to do. So, if we are using many URIs repeatedly throughout our representation then its better to define some global namespace and start referring to these namespaces with a shorthand.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:hasBlog&amp;gt;&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:hasBlog&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;we notice that every RDF triple is wrapped between the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:RDF&lt;/code&gt; tags. Defining namesapces is done using the &lt;code class=&quot;highlighter-rouge&quot;&gt;xmlns&lt;/code&gt; (XML namespace) followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; and the name of the namespace and then the URI. URIs are represented with the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;rdf:description&amp;gt;&lt;/code&gt; tag and the URI for that RDF resource should be identified in the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:about&lt;/code&gt; attribute. In addition to that, custom properties are wrapped in tags named after the namesapce defined on top followed buy the path to the sepccific property &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;aa:hasBlog&amp;gt;&lt;/code&gt; We can also define more than one property for each resource:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aa:hasEmail=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;me@ahmadassaf.com&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:hasBlog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:Name&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:datatype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3c.org/2001/XMLSchema#String&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
               Ahmad Assaf
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:Name&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In an &lt;strong&gt;RDF/XML&lt;/strong&gt; document there are two types of XML nodes: 1) &lt;strong&gt;resource XML nodes&lt;/strong&gt; and 2)&lt;strong&gt; property XML nodes&lt;/strong&gt;. Resource XML nodes are the subjects and objects of statements, and they usually are &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:Description&lt;/code&gt; tags that have an &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:about&lt;/code&gt; attribute on them giving the URI of the resource they represent. In this example, the rdf:Description nodes are the resource nodes. Resource XML nodes contain within them property XML nodes (and nothing else). Each property XML node represents a single statement. The subject of the statement is the outer resource XML node that contains the property. We should also notice that we have used the rdf:datatype in order to specify the usage of certain types like Strings or Integers … etc. The URL can be shortcut by using namespaces as well. We have the &lt;code class=&quot;highlighter-rouge&quot;&gt;xml:base&lt;/code&gt; attribute that defines a base URI that will be used globally in the XML representation. So for example, if i have identified a &lt;code class=&quot;highlighter-rouge&quot;&gt;xml:base&lt;/code&gt; tag as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;
xmlns:aa=&quot;http://ahmadassaf.com/Personal#&quot;
xml:base=&quot;http://ahmadassaf.com/Administrators&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and i have changed my URI from &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ahmadassaf.com&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ahmadassaf.com/Administrators#AhmadAssaf&lt;/code&gt; then in the XML RDF i point out to that as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;rdf:Description rdf:about=&quot;#AhmadAssaf&quot; aa:hasEmail=&quot;...... &amp;gt;&amp;lt;/rdf:Description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;instead of using &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:about&lt;/code&gt; and then put the hash # in front of the fragment URI, i can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:ID&lt;/code&gt; which has the hash tag complemented in it so that i can write:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;rdf:Description rdf:ID=&quot;AhmadAssaf&quot; aa:hasEmail=&quot;...... &amp;gt;&amp;lt;/rdf:Description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, despite the fact that &lt;strong&gt;XML RDF&lt;/strong&gt; is difficult to read and a bit expensive and not flexible, it is the standard for web documents as we can embed it simply as XML is supported by most browsers and parsers.&lt;/p&gt;

&lt;h3 id=&quot;n3-notation&quot;&gt;N3 Notation&lt;/h3&gt;

&lt;p&gt;Simple listing of triples. It is a shorthand non-XML serialization of RDF models designed with Human readability in mind. It is more compact than RDF XML but for complex and large models it can become very expensive.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;http://ahmadassaf.com&amp;gt; &amp;lt;http://ahmadassaf.com/Personal#hasBlog&amp;gt; &amp;lt;http://ahmadassaf.com/blog&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;N3&lt;/strong&gt; has some syntactic sugar that allows further abbreviations. If many statements repeat the same subject and predicate, just separate the objects with commas:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;http://ahmadassaf.com&amp;gt; &amp;lt;http://ahmadassaf.com/Personal#hasBlog&amp;gt; &amp;lt;http://ahmadassaf.com/blog&amp;gt;, &amp;lt;http://MySecondBlog.com/&amp;gt;, &amp;lt;http://MyThirdBlog.com/&amp;gt; . 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if the same subject is repeated, but with different predicates, one may use semicolons as in the example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;http://ahmadassaf.com&amp;gt; &amp;lt;http://ahmadassaf.com/Personal#hasBlog&amp;gt; &amp;lt;http://ahmadassaf.com/blog&amp;gt;; foaf:name &quot;Ahmad Assaf&quot; .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;turtle-terse-rdf-triple-language&quot;&gt;Turtle (Terse RDF Triple Language)&lt;/h3&gt;

&lt;p&gt;A simplified of the N3 notation. URIs are wrapped in angle brackets and Literals in quotations marks. Every triple ends up with a period and whitespaces or indentation will be ignored.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;http://ahmadassaf.com&amp;gt;
&amp;lt;http://ahmadassaf.com/Personal#hasBlog&amp;gt;
&amp;lt;http://ahmadassaf.com/blog&amp;gt; . 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We have talked about namespaces and base URIs in XML. The same concepts are transfered into the turtle notation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix xsd: &amp;lt;http://www.w3.org/2001/XMLSchema#&amp;gt;.
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt;.
@prefix ex: &amp;lt;http://example.org/stuff/1.0/&amp;gt;.
@base &amp;lt;http://ahmadassaf.com/Administrators&amp;gt;

so in my example i will have:
:AhmadAssaf
aa:hasBlog &amp;lt;http://ahmadassaf.com/blog&amp;gt; ;
ex:fullname &quot;Ahmad Assaf&quot;^^xsd.string .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note that we have used a semi colon to express that we want to keep stating facts about the same subject which is &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;http://ahmadassaf.com&amp;gt;&lt;/code&gt; We will go to more details about this notation a bit forward. In Turtle the referring to URIs in the base ID is done in a similar way of using the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:ID&lt;/code&gt; tag as the hash is complemented with the usage of colons &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; and the fragment URI ex: &lt;code class=&quot;highlighter-rouge&quot;&gt;:AhmadAssaf&lt;/code&gt; The current base URI may be altered in a Turtle document using the &lt;code class=&quot;highlighter-rouge&quot;&gt;@base&lt;/code&gt; directive. It allows further abbreviation of URIs but is usually for simplifying the URIs in the data, where the prefix directives are for vocabularies that describe the data. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Here the scope base URI is the document URI
&amp;lt;a1&amp;gt; &amp;lt;b1&amp;gt; &amp;lt;c1&amp;gt; .
@base &amp;lt;http://example.org/ns/&amp;gt; .
# In-scope base URI is http://example.org/ns/
&amp;lt;a2&amp;gt; &amp;lt;http://example.org/ns/b2&amp;gt; &amp;lt;c2&amp;gt; .
@base &amp;lt;foo/&amp;gt; .
# In-scope base URI is http://example.org/ns/foo/ at this point ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;notes&quot;&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Turtle strings and URIs can use -escape sequences to represent Unicode code points (t, n, …. etc. )&lt;/li&gt;
  &lt;li&gt;Comments in Turtle take the form of &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;, outside a relative URI or strings, and continue to the end of line&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; symbol may be used to repeat the subject and predicate of triples that only differ in the object RDF term.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# this is not a complete turtle document
:a :b :c ,
:d .
# the last triple is :a :b :d .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt; symbol may be used to repeat the subject of of triples that vary only in predicate and object RDF terms.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# this is not a complete turtle document
:a :b :c ;
:d :e .
# the last triple is :a :d :e .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The Framework is a combination of web based protocols (URI, HTTP, XML … etc.) that are based on formal models and defines all the allowed relationships among resources.&lt;/p&gt;

&lt;h2 id=&quot;blank-nodes-b-nodes-&quot;&gt;Blank Nodes (B Nodes )&lt;/h2&gt;

&lt;p&gt;We have talked earlier about Blank Nodes or B Nodes. They are basically nodes that might not have names and are potentially un-referenceable. RDF only allows binary relations, so it’s necessary to express many-way relations using intermediate nodes, and these nodes are often anonymous.They are used usually to express collections, for example if i want to say that my blog is influenced by other resources, in natural language i can say that my blog at &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ahmadassaf.com/blog&lt;/code&gt; is influenced by Blog A at &lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.BlogA.com&lt;/code&gt; and Blog B at &lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.BlogB.com&lt;/code&gt; If i want to represent this as a directed graph i will do:&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-2.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The problem now is that how can i distinguish between these two sources ?! which URL corresponds to which resources name ?! so now we have to think of a workaround to ensure unique representation and selection of resources. We can make this happen (representing multi valued relation) by introducing additional nodes in the graph:&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-3.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-3.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The nodes in black are blank nodes that do not have a name and only act as a connection point ( A visual representation):&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-4.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-4.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Now how can we represent Blank Nodes in &lt;strong&gt;XML RDF&lt;/strong&gt; and&lt;strong&gt; Turtle&lt;/strong&gt; notation ?!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version-&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aa:hasName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ahmad Assaf&#39;s Blog&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:isInfluencedBy&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:parseType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Resource&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:name&amp;gt;&lt;/span&gt;Blog A&lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:name&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:link&amp;gt;&lt;/span&gt;http://www.blogA.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:link&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:isInfluencedBy&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In&lt;strong&gt; XML RDF&lt;/strong&gt; the blank nodes are denoted by the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:parseType=&quot;Resource&quot;&lt;/code&gt;, in &lt;strong&gt;Turtle&lt;/strong&gt; its much more easier:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .

&amp;lt;http://ahmadassaf.com/blog&amp;gt; aa:isInfluencedBy [
     aa:name &quot;Blog A&quot; ;
     aa:link &quot;http://www.blogA.com&quot; ].
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;we simply introduce blank nodes in Turtle by using the brackets &lt;code class=&quot;highlighter-rouge&quot;&gt;[ ]&lt;/code&gt;. So far we have known that Blank Nodes do not have name, this is not always the case as sometime i need to give a label or a name to that blank node in order to be able to reference it locally. In this example the &lt;code class=&quot;highlighter-rouge&quot;&gt;nodeID&lt;/code&gt; will follow the default base URI.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;rdf:Description rdf:about=&quot;http://ahmadassaf.com/blog&quot; aa:hasName=&quot;Ahmad Assaf&#39;s Blog&quot;&amp;gt;
     &amp;lt;aa:isInfluencedBy rdf:nodeID=&quot;Resouce1 /&amp;gt;
&amp;lt;/rdf:Description&amp;gt;

&amp;lt;rdf:Description rdf:nodeID=&quot;Resource1&quot;&amp;gt;
     &amp;lt;aa:name&amp;gt;Blog A&amp;lt;/aa:name&amp;gt;
     &amp;lt;aa:link&amp;gt;http://www.blogA.com&amp;lt;/aa:link&amp;gt;
&amp;lt;/rdf:Description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Turtle we use the underscore &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; followed by a colon that denotes the default namespace and then the Blank Node name&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .

&amp;lt;http://ahmadassaf.com/blog&amp;gt; aa:isInfluencedBy  _:Resource1 .

_:Resource1 aa:name &quot;Blog A&quot; ;
                aa:link &quot;http://www.blogA.com&quot; .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;so Blank Nodes do &lt;strong&gt;NOT&lt;/strong&gt; need be de-referencable and accessed from the outside world, however they can have IDs or names that will them to be referenced in an RDF document or model.&lt;/p&gt;

&lt;h2 id=&quot;data-structures-in-rdf&quot;&gt;Data Structures in RDF&lt;/h2&gt;

&lt;p&gt;In RDF there exists some kind of collections (in computer science terms) that will allow us aggregate nodes or facts together. They are general data structures to enumerate any resource or literal. They are basically a syntactic sugar that will ease the process of writing code with no semantic expressiveness whatsoever. We have in RDF two different aggregators:&lt;/p&gt;

&lt;h3 id=&quot;containers&quot;&gt;Containers&lt;/h3&gt;

&lt;p&gt;An open list of elements possibly including duplicate members where new entries (additions) are possible Note that the container resource (which may either be a blank node or a resource with a URIref) denotes the group as a whole. The members of the container can be described by defining a container membership property for each member with the container resource as its subject and the member as its object. These container membership properties have names of the form &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:_n&lt;/code&gt; where n is a decimal integer greater than zero, with no leading zeros, e.g., &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:_1, rdf:_2, rdf:_3&lt;/code&gt; and so on, and are used specifically for describing the members of containers. Container resources may also have other properties that describe the container, in addition to the container membership properties and the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:type&lt;/code&gt; property.&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-5.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-5.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We notice that collection node has a type of rdf:type rdf:seq which means that this is a sequential collection or list and the order of the items is important. Each item in the list have a unique property &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:_1, rdf:_2 ...&lt;/code&gt; etc. In &lt;strong&gt;Turtle&lt;/strong&gt;, sequential collections are represented as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .
@base &amp;lt;http://ahmadassaf.com/&amp;gt;

:blog aa:hasAdmins [
     a rdf:Seq;
     rdf:_1 &amp;lt;A&amp;gt;;
     rdf:_2 &amp;lt;B&amp;gt;;
     rdf:_3 &amp;lt;C&amp;gt;.
].
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Or it can be written as:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .
@base &amp;lt;http://ahmadassaf.com/&amp;gt;

:blog aa:hasAdmins :administrators.
:administrators rdf:type rdf:Seq.
:administrators rdf:_1 &amp;lt;A&amp;gt;.
:administrators rdf:_2 &amp;lt;B&amp;gt;.
:administrators rdf:_3 &amp;lt;C&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Or written as:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:blog aa:hasAdmins :administrators.
:administrators rdf:type rdf:Seq;
rdf:_1 &amp;lt;A&amp;gt;;
rdf:_2 &amp;lt;B&amp;gt;;
rdf:_3 &amp;lt;C&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In &lt;strong&gt;XML/RDF&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:hasAdmins&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Bag&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/A&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/B&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/C&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Bag&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:hasAdmins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;RDF/XML&lt;/strong&gt; provides &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:li&lt;/code&gt; as a convenience element to avoid having to explicitly number each membership property. The numbered properties &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:_1, rdf:_2&lt;/code&gt; and so on are generated from the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:li&lt;/code&gt; elements in forming the corresponding graph. The element name &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:li&lt;/code&gt; was chosen to be mnemonic with the term “list item” from HTML we notice that we referenced our blog by using the default namespace using the colon &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; and we have referred to the collection by the brackets &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; (like Blank Nodes) but we have added the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:type&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:Seq&lt;/code&gt; to that blank node. In RDF a short hand for the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:type&lt;/code&gt; is the letter a (like natural language in English when you say that this is a cat –&amp;gt; it means that this is sth with A type of cat ). We have known so far the Sequential container which denotes ordered list of elements, but we do also have another types of containers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:Bag&lt;/code&gt;  This is an unordered list of elements possibly including duplicate members and there is no given order for elements.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:Alt&lt;/code&gt; Defines alternatives of elements and only one element of the given alternatives is relevant to the application ( a group of resources or literals that are alternatives (typically for a single value of a property) . An Alt container is intended to have at least one member, identified by the property rdf:_1. This member is intended to be considered as the default or preferred value. Other than the member identified as &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:_1&lt;/code&gt; the order of the remaining elements is not significant.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;collections&quot;&gt;Collections&lt;/h3&gt;

&lt;p&gt;These are closed lists where there is no extension possible. Elements of the list are already predefined. It really resembles the traditional list data structure with the fact that it is closed to insert operations. It is split recursively with &lt;strong&gt;Head&lt;/strong&gt; (first) and &lt;strong&gt;Tail&lt;/strong&gt; (rest), we end the list by linking to &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:nil&lt;/code&gt;&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-6.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-6.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Each of the blank nodes forming this list structure is implicitly of type &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:List&lt;/code&gt; that is, each of these nodes implicitly has an &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:type&lt;/code&gt; property whose value is the predefined type &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:List&lt;/code&gt; although this is not explicitly shown in the graph.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .
@base &amp;lt;http://ahmadassaf.com/&amp;gt;

:swt blog aa:hasAdmins [
     rdf:first &amp;lt;A&amp;gt;; rdf:rest [
          rdf:first &amp;lt;B&amp;gt;; rdf:rest [
               rdf:first &amp;lt;C&amp;gt;;
               rdf:rest rdf:nil .
]]].
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, in Turtle there are shortcuts to ease the simplify the syntax. We do that by using a new type of brackets &lt;code class=&quot;highlighter-rouge&quot;&gt;( )&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .
@base &amp;lt;http://ahmadassaf.com/&amp;gt;

:blog aa:hasAdmins (&amp;lt;A&amp;gt; &amp;lt;B&amp;gt; &amp;lt;C&amp;gt; ) .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The collection of RDF statements (RDF Triples) form together an RDF graph. The assertion of an &lt;strong&gt;RDF graph&lt;/strong&gt; (&lt;em&gt;assertion means that a term evaluates to true&lt;/em&gt;) amounts to the assertion of all triples in it, this means a conjunction (logical AND) between all the statement corresponding to all the triples in the graph.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The datastore that stores these triples is often called a triple store&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;RDF/XML&lt;/strong&gt; provides a special notation to make it easy to describe collections using graphs of this form. In &lt;strong&gt;RDF/XML&lt;/strong&gt;, a collection can be described by a property element that has the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:parseType=&quot;Collection&quot;&lt;/code&gt;, and that contains a group of nested elements representing the members of the collection. &lt;strong&gt;RDF/XML&lt;/strong&gt; provides the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:parseType&lt;/code&gt; attribute to indicate that the contents of an element are to be interpreted in a special way. In this case, the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:parseType=&quot;Collection&quot;&lt;/code&gt; attribute indicates that the enclosed elements are to be used to create the corresponding list structure in the RDF graph&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:hasAdmins&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:parseType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collection&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/A&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/B&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/C&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:hasAdmins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Semantic Web practitioners found it very difficult to deal with large amounts of triples for application development. There are lots of reasons that you would want to segment different subsets of triples from each other (simplified access control, simplified updating, trust, etc.), and vanilla RDF made segmentation tedious.&lt;/p&gt;

&lt;h2 id=&quot;named-graphs&quot;&gt;Named Graphs&lt;/h2&gt;

&lt;p&gt;At first the community tried using reification to solve this data segmentation problem, but today everyone has converged on using named graphs. A Named Graph is a collection of RDF statement that are given an identifier (URI). When referring to triple in a name graph we often use a 4-tuple notation (often referred to as quad) instead of the standard 3-tuple one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Named Graph&amp;gt;, &amp;lt;Subject&amp;gt;, &amp;lt;Predicate&amp;gt;, &amp;lt;Object&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When using named graphs, &lt;code class=&quot;highlighter-rouge&quot;&gt;TriG&lt;/code&gt; is the de facto serialization. It’s the same as Turtle except that statements in a single graph are grouped with &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@prefix rdf: &amp;lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;gt; .
@prefix aa: &amp;lt;http://ahmadassaf.com/Personal#&amp;gt; .
@base &amp;lt;http://ahmadassaf.com/&amp;gt;

:blogGraph {
     :blog aa:hasAdmins (&amp;lt;A&amp;gt; &amp;lt;B&amp;gt; &amp;lt;C&amp;gt; ) .
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This trivial example puts all the statements in the document into a single named graph, egotistically called &lt;code class=&quot;highlighter-rouge&quot;&gt;:blogGraph&lt;/code&gt; Again, like all things in RDF &lt;code class=&quot;highlighter-rouge&quot;&gt;:blogGraph&lt;/code&gt; is a URI. Looking at the 4-tuples, it’s pretty obvious that the same statement can exist in multiple named graphs. This is by design and is a very important feature. By organizing the statement into named graphs, a Semantic Web application can implement access control, trust, data lineage, and other functionality very cleanly.&lt;/p&gt;

&lt;h2 id=&quot;rdf-reification&quot;&gt;RDF Reification&lt;/h2&gt;

&lt;p&gt;RDF applications sometimes need to describe other RDF statements using RDF, for instance, to record information about when statements were made, who made them, or other similar information (this is sometimes referred to as “provenance” information). Moreover, sometimes we will come across use cases where we deduce facts in our model, and the deducted facts also need to be used and modeled (become the subject of a new RDF statements). For example, if a detective (Sherlock Holmes) deduced that the gardener is the one who has killed the butler, then i might want to use this new discovered fact in a new RDF statement. This is another use case of &lt;strong&gt;reification. &lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Reification &lt;/strong&gt;allows interleaving of RDF statements and making statements about other statements&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;RDF provides a built-in vocabulary intended for describing RDF statements. A description of a statement using this vocabulary is called a reification of the statement. The RDF reification vocabulary consists of the&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;type &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:Statement&lt;/code&gt; describes an RDF statement, consisting of the following properties:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:subject&lt;/code&gt; the described resource&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:predicate&lt;/code&gt; the original property&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:object&lt;/code&gt; the value of the property&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;ex:Gardener ex:hasKilled ex:Butler
ex:Sherlock ex:deduces ex: ????&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The use of reification makes it fairly simple to represent this information:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ex:Sherlock ex:deduces ex:StatementOnGardener .
ex:statementOnGardener a rdf:Statement ;
    rdf:subject ex:Gardener ;
    rdf:predicate ex:hasKilled ;
    rdf:object ex:butler .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, while RDF provides this reification vocabulary, care is needed in using it, because it is easy to imagine that the vocabulary defines some things that are not actually defined.for example, lets take the statement:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:blog aa:hasAdmins :ahmadassaf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the reification vocabulary, a reification of the statement about the blog’s administrator would be given by assigning the statement a URIref such as &lt;code class=&quot;highlighter-rouge&quot;&gt;:triple12345&lt;/code&gt; (so statements can be written describing it), and then describing the statement using the statements:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:triple12345 rdf:type rdf:Statement.
:triple12345 rdf:subject :blog.
:triple12345 rdf:predicate aa:hasAdmin.
:triple12345 rdf:object :ahmadassaf.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;/images/posts/everything-you-need-to-know-about-rdf-7.png&quot;&gt;&lt;img src=&quot;/images/posts/everything-you-need-to-know-about-rdf-7.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:dc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://purl.org/dc/elements/1.1/&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xml:base=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/triples&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:hasAdmins&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:ID=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ahmadassaf&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:hasAdmins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Statement&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#triple12345&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:subject&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:predicate&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#hasAdmins&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:object&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/ahmadassaf&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:creator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/85740&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Statement&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The subject of these reification triples is a URI ref formed by concatenating the base URI of the document (given in the xml:base declaration), the character &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; (to indicate that what follows is a fragment identifier), and the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:ID&lt;/code&gt; attribute. However you can generate the same graph (Reification) by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:ID&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:aa=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/Personal#&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:dc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://purl.org/dc/elements/1.1/&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xml:base=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/triples&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;aa:hasAdmins&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:ID=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;triple12345&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:ID=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ahmadassaf&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aa:hasAdmins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#triple12345&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:creator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ahmadassaf.com/85740&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;/rdf:Description &amp;gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this case, specifying the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;rdf:ID=&quot;triple12345&quot;&lt;/code&gt; in the aa:hasAdmins element results in the original triple describing the blog administrator:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://ahmadassaf/blog aa:hasAdmins http://ahmadassaf.com/triples#ahmadassaf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;plus the reification triples:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://ahmadassaf.com/triples#triple12345 rdf:type rdf:Statement.
http://ahmadassaf.com/triples#triple12345 rdf:subject :blog.
http://ahmadassaf.com/triples#triple12345 rdf:predicate aa:hasAdmin.
http://ahmadassaf.com/triples#triple12345 rdf:object :ahmadassaf.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;reification-advantages&quot;&gt;Reification Advantages&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Modeling data provenance&lt;/li&gt;
  &lt;li&gt;Formalizing statements about Reliability and Trust&lt;/li&gt;
  &lt;li&gt;Definition of metadata about statements (Assertions and Statements)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap Up&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;An RDF Model is a set of RDF statements&lt;/li&gt;
  &lt;li&gt;An RDF statement consists of subject, property, object&lt;/li&gt;
  &lt;li&gt;Subjects and objects and resources while an object can be either a literal or a resource&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far we have talked about several RDF representations (A serialization format is a way to encode information so that when it’s passed between machines it can be parsed, XML is a serialization format, RDF is a data model); however there are few more worth mentioning:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;TriG&lt;/strong&gt;: TriG is Turtle but with support for named graphs. It’s the de facto standard for serializing RDF with named graphs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;RDFa (RDF embedded in HTML)&lt;/strong&gt;: You can embed RDF data within normal web pages by using RDFa.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;N-Triples&lt;/strong&gt;: is a very basic RDF serialization. Its key feature is that only one triple exists per line so that it’s very quick to parse and so that Unix command-line tools can easily manipulate it. It’s also highly compressible, so large, public RDF sources like &lt;a href=&quot;http://dbpedia.org/About&quot;&gt;DBpedia &lt;/a&gt;often publish data in N-Triples form.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What sets RDF apart from XML is that RDF is designed to represent knowledge in a distributed world. That RDF is designed for knowledge, and not data, means RDF is particularly concerned with meaning. Everything at all mentioned in RDF means something. It may be a reference to something in the world, like a person or movie, or it may be an abstract concept, like the state of being friends with someone else. And by putting three such entities together, the RDF standard says how to arrive at a fact. The second key aspect of RDF is that it works well for distributed information. That is, RDF applications can put together RDF files posted by different people around the Internet and easily learn from them new things that no single document asserted. It does this in two ways, first by linking documents together by the common vocabularies they use, and second by allowing any document to use any vocabulary. This allows enormous flexibility in expressing facts about a wide range of things, drawing on information from a wide range of sources.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;To distinguish between URIs, namespaced names (abbreviated URIs), anonymous nodes, and literal values,&lt;/strong&gt; &lt;strong&gt;I used the following common convention&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Full URIs are enclosed in angle brackets.&lt;/li&gt;
  &lt;li&gt;Namespaced names are written plainly, but their colons give them away.&lt;/li&gt;
  &lt;li&gt;Anonymous nodes are written like namespaced names, but in the reserved “_” namespace with an arbitrary local name after the colon.&lt;/li&gt;
  &lt;li&gt;Literal values are enclosed in quotation marks.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Semantic Web" /><category term="Semantic Web" /><category term="Knowledge Representation" /><category term="RDF" /><category term="Linked Data" /><summary>Humans share, consume and produce knowledge using natural language; however presenting this knowledge in a machine readable and understandable format can be difficult. This post discusses the Resource Description Framework (RDF) which is the main data modeling block of the Semantic Web</summary></entry><entry><title>Cleaning up Wordpress tags .. the right way !</title><link href="http://127.0.0.1:4000/cleaning-wordpress-tags-the-right-way/" rel="alternate" type="text/html" title="Cleaning up Wordpress tags .. the right way !" /><published>2014-02-18T00:00:00+00:00</published><updated>2014-02-18T00:00:00+00:00</updated><id>http://127.0.0.1:4000/cleaning-wordpress-tags-the-right-way</id><content type="html" xml:base="http://127.0.0.1:4000/cleaning-wordpress-tags-the-right-way/">&lt;p&gt;During the process of designing my blog (which i considered as a learning playground mostly), i had to import/export the database multiple times, delete and review posts and do lots of changes in my posts. In the end, i have noticed that although i have cleaned my posts, the number of tags is still unrealistic. After some digging, i discovered that at some point, WordPress was not cleaning my tags for unknown reasons to me up to now. I have decided to write a small PHP script that will scan my WordPress database and posts to determine the unique tags that i should ONLY have. The code below will do the following steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Retrieve all &lt;strong&gt;published&lt;/strong&gt; posts (the status can be changed easily in the passed param array)&lt;/li&gt;
  &lt;li&gt;Get all the tags in WordPress database&lt;/li&gt;
  &lt;li&gt;Get all the tags assigned to these posts&lt;/li&gt;
  &lt;li&gt;Check if there exist any WordPress post with no tags assigned and notify the user&lt;/li&gt;
  &lt;li&gt;Print out the statistics, and delete all the extra tags found (you can enter a prompt here or allow for manual deletion)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Include Wordpress main file to be able to access WP functions
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;blog/wp-load.php&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Define the scope of the search for posts, pages (published, drafts ... )
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;publish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;posts_per_page&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; We have found &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; posts&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The array that will hold the total tags for all the posts
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tags_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The tags array that is returned by Wordpress that contains extra bad tags
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// This array will only hold the names of the tags in order to create a diff
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tagsNames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$wordpress_total_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Start the WP loop in order to check posts
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setup_postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;ob_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ob_end_clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$post_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_the_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//get the post tags
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Check if the post contain any tags, if not we will notify the user with the post&#39;s name and link
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_tags&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$tags_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;$tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;term_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//get the tag name. This can be changed to term_id or whatever you want
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;We have found no Tags in post: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; name: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &amp;lt;a href=&#39;http://ahmadassaf.com/blog/wp-admin/post.php?post=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;action=edit&#39;&amp;gt;Link&amp;lt;/a&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$total_posts_tags&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tags_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//total number of tags in all posts
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$unique_tags_array&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tags_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//unique tags only from the posts
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$actual_unique_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$unique_tags_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//the number of unique tags found
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Total of: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wordpress_total_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; Tags in Wordpress Posts&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Total of: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$total_posts_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; REAL Tags in Wordpress Posts&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Total of: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$actual_unique_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; REAL &amp;amp; UNIQUE Tags in Wordpress Posts&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;There are: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wordpress_total_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$actual_unique_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; Extra Tags Found&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tags&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$tagsNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;term_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$extra_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;array_diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tagsNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$unique_tags_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$extra_tags&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$term_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wp_delete_term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$term_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_tag&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The end result will look like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;We have found 285 posts

We have found no Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;post: 60231 name: modern-powerful-php-debugging-helper-kint Link

Total of: 1009 Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Wordpress Posts
Total of: 1686 REAL Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Wordpress Posts
Total of: 788 REAL &amp;amp; UNIQUE Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Wordpress Posts

There are: 221 Extra Tags Found
Array &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; .htaccess &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 960 Grid System &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;9] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Add-ons &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;11] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Adipoli &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Adobe Creative Suite &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;13] ........

Running the code again will output

We have found 285 posts

We have found no Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;post: 60231 name: modern-powerful-php-debugging-helper-kint Link

Total of: 788 Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Wordpress Posts
Total of: 1686 REAL Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Wordpress Posts
Total of: 788 REAL &amp;amp; UNIQUE Tags &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Wordpress Posts

There are: 0 Extra Tags Found
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I hope you found this post useful, and please don’t hesitate to write a comment if you have any question.&lt;/p&gt;</content><category term="web development" /><category term="Wordpress" /><category term="PHP" /><summary>I have decided to write a small PHP script that will scan my WordPress database and posts to determine the unique tags that i should ONLY have</summary></entry><entry><title>Introduction to Semantic Web</title><link href="http://127.0.0.1:4000/introduction-to-semantic-web/" rel="alternate" type="text/html" title="Introduction to Semantic Web" /><published>2014-01-21T00:00:00+00:00</published><updated>2014-01-21T00:00:00+00:00</updated><id>http://127.0.0.1:4000/introduction-to-semantic-web</id><content type="html" xml:base="http://127.0.0.1:4000/introduction-to-semantic-web/">&lt;p&gt;The model behind the Web could be roughly summarized as a way to publish documents represented in a standard way (HTML), containing links to other documents and accessible through the Internet using standard protocols (&lt;a href=&quot;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_protocol_suite&quot;&gt;IP&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP&quot;&gt;HTTP&lt;/a&gt;). The result could be seen as a worldwide, distributed file system of interconnected documents that humans can read, exchange and discuss.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Before the web, people used to write documents, cite references and then check the reference and go and look search for it, in the library or look in the library … etc.&lt;/li&gt;
  &lt;li&gt;The great invention of the web is the hyperlink; click on that link and you get to the next document in the chain .. you can easily go to the reference !! so the &lt;strong&gt;web 1.0&lt;/strong&gt; was the web of documents&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Web 2.0&lt;/strong&gt; was application silos .. social stuff .. its not nly about the data .. by the problem is that these systems do not interoperate (update facebook profile doesnt affect you linkedin ) .. data are not linked -&amp;gt; this was not only in web but also inside enterprise data&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.w3.org/standards/semanticweb/&quot; title=&quot;Semantic Web&quot;&gt;Web 3.0&lt;/a&gt;&lt;/strong&gt; is all about connecting the data .. not the documents but the data at lower levels&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In summary, the great advantage of &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_1.0&quot; title=&quot;Web 1.0&quot;&gt;Web 1.0&lt;/a&gt; was that it abstracted away the physical storage and networking layers involved in information exchange between two machines. This breakthrough enabled documents to appear to be directly connected to one another. Click a link and you’re there—even if that link goes to a different document on a different machine on another network on another continent! In the same way that Web 1.0 abstracted away the network and physical layers, the Semantic Web abstracts away the document and application layers involved in the exchange of information.&lt;/p&gt;

&lt;p&gt;The Semantic Web connects facts, so that rather than linking to a specific document or application, you can instead refer to a specific piece of information contained in that document or application. If that information is ever updated, you can automatically take advantage of the update. The word semantic itself implies meaning or understanding. As such, the fundamental difference between Semantic Web technologies and other technologies related to data (such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Relational_database&quot;&gt;relational databases&lt;/a&gt; or the World Wide Web itself) is that the Semantic Web is concerned with the meaning and not the structure of data. This fundamental difference engenders a completely different outlook on how storing, querying, and displaying information might be approached. Some applications, such as those that refer to a large amount of data from many different sources, benefit enormously from this feature.  Others, such as the storage of high volumes of highly structured transactional data, do not.&lt;/p&gt;

&lt;p&gt;What is meant by “semantic” in the Semantic Web is not that computers are going to understand the meaning of anything, but that the logical pieces of meaning can be mechanically manipulated by a machine to useful ends. So now imagine a new Web where the real content can be manipulated by computers. For now, picture it as a web of databases. One “semantic” website publishes a database about a product line, with products and descriptions, while another publishes a database of product reviews. A third site for a retailer publishes a database of products in stock. What standards would make it easier to write an application to mesh distributed databases together, so that a computer could use the three data sources together to help an end-user make better purchasing decisions? Semantic Web itself does not deal with unstructured content; instead, it is about representing not only structured data and links but also the meaning of the underlying concepts and relationships There’s nothing stopping anyone from writing a program now to do those sorts of things, in just the same way that nothing stopped anyone from exchanging data before we had XML. But standards facilitate building applications, especially in a decentralized system. &lt;strong&gt; From a technical point of view, the Semantic Web consists of:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Data_model&quot; title=&quot;Data model&quot;&gt;Data Model&lt;/a&gt;&lt;/strong&gt; : RDF (&lt;a href=&quot;http://en.wikipedia.org/wiki/Resource_Description_Framework&quot; title=&quot;Resource Description Framework&quot;&gt;Resource Description Framework&lt;/a&gt;): The data modeling language for the Semantic Web. All Semantic Web information is stored and represented in the RDF. It is a flexible and abstract model meaning that there is more than one representation of RDF.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Query Language&lt;/strong&gt;: SPARQL (&lt;a href=&quot;http://en.wikipedia.org/wiki/SPARQL&quot; title=&quot;SPARQL&quot;&gt;SPARQL Protocol and RDF Query Language&lt;/a&gt;): The query language of the Semantic Web. It is specifically designed to query data across various systems.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Schema and Ontology Languages&lt;/strong&gt;: OWL (&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_Ontology_Language&quot; title=&quot;Web Ontology Language&quot;&gt;Web Ontology Language&lt;/a&gt;) - RDF Schema (RDFS) The schema language, or knowledge representation (KR) language, of the Semantic Web. They enable you to define concepts composably so that these concepts can be reused as much and as often as possible. Composability means that each concept is carefully defined so that it can be selected and assembled in various combinations with other concepts as needed for many different applications and purposes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The term semantic technologies represents a fairly diverse family of technologies that have been in existence for a long time and seek to help derive meaning from information. Some examples of semantic technologies include natural language processing (NLP), data mining, &lt;a href=&quot;http://en.wikipedia.org/wiki/Artificial_intelligence&quot; title=&quot;Artificial intelligence&quot;&gt;artificial intelligence (AI)&lt;/a&gt;, category tagging, and semantic search. You might think of the goal of semantic technologies as separating signal from noise. &lt;strong&gt;Some examples of existing semantic technologies being used today include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Natural-language processing (NLP)&lt;/strong&gt;:  NLP technologies attempt to process unstructured text content and extract the names, dates, organizations, events, etc. that are talked about within the text. There are many extensions of NLP and they include:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt;: Semantic Search often requires NLP parsing of source documents. The specific technique used is called Entity Extraction, which basically identifies proper nouns (e.g., people, places, companies) and other specific information for the purposes of searching. For example, consider the query, “Find me all documents that mention Barack Obama.” Some documents might contain “Barack Obama,” others “President Obama,” and still others “Senator Obama.” When used correctly, extractors will map all of these terms to a single concept.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Auto-categorization&lt;/strong&gt;: Imagine that you have 100,000 news articles and you want to sort them based on certain specific criteria. That would take a human ages to do, but a computer can do it very quickly.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Sentiment_analysis&quot; title=&quot;Sentiment analysis&quot;&gt;Sentiment Analysis&lt;/a&gt;&lt;/strong&gt;: Sentiment Analysis measures the “sentiment” of an article, typically meaning whether the article’s tone is positive, negative, or neutral. This application of NLP technology is often used in conjunction with search, but it can also be used in other contexts, such as alerting. For example, a business owner might ask an application to “alert me when someone says something negative regarding my company on Facebook.”&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Summarization&lt;/strong&gt;: Often used in conjunction with research applications, summaries of topics are created automatically so that actual people do not have to wade through a large number of long-winded articles (perhaps such as this one!).&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Question Answering&lt;/strong&gt;: This is the new hot topic in NLP, as evidenced by Siri and Watson. However, long before these tools, we had Ask Jeeves (now Ask.com), and later Wolfram Alpha, which specialized in question answering. The idea here is that you can ask a computer a question and have it answer you (Star Trek-style! “Computer…”).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt; Data mining&lt;/strong&gt;: Data mining technologies employ pattern-matching algorithms to tease out trends and correlations within large sets of data. Data mining can be used, for example, to identify suspicious and potentially fraudulent trading behavior in large databases of financial transactions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Artificial intelligence or expert systems&lt;/strong&gt;: AI or expert systems technologies use elaborate reasoning models to answer complex questions automatically. These systems often include machine-learning algorithms that can improve the system’s decision-making capabilities over time.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classification&lt;/strong&gt;: Classification technologies use heuristics and rules to tag data with categories to help with searching and with analyzing information.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Semantic search&lt;/strong&gt;: Semantic search technologies allow people to locate information by concept instead of by keyword or key phrase. With semantic search, people can easily distinguish between searching for John F. Kennedy, the airport, and John F. Kennedy, the president.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main goal behind knowing these technologies is that they help us in assembling the building blocks of the Semantic Web. For example, NLP can be used to extract structured data from unstructured documents (flat files like text documents). This data is then linked via Semantic Web technologies to other published data. This bridges the gap between documents (unstructured data) and structured data.&lt;/p&gt;

&lt;h1 id=&quot;linked-data&quot;&gt;Linked Data&lt;/h1&gt;

&lt;p&gt;One of the most important movements in the Semantic Web community is Linked Data, which strives to expose and connect all of the world’s data in a readily queryable and consumable form. The goal of Linked Data is to publish structured data in such a way that it can be easily consumed and combined with other Linked Data.&lt;/p&gt;

&lt;h2 id=&quot;the-four-rules-of-linked-data&quot;&gt; The Four Rules of Linked Data&lt;/h2&gt;

&lt;p&gt;So in a way, Linked Data is the Semantic Web realized via four best practice principles.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use URIs as names for things. An example of a URI is any URL. For example: http://ahmadassaf.com is the URI that refers to Ahmad Assaf.&lt;/li&gt;
  &lt;li&gt;Use HTTP URIs so that people can look up those names.&lt;/li&gt;
  &lt;li&gt;When someone looks up a URI, provide useful information, using the standards such as RDF and SPARQL.&lt;/li&gt;
  &lt;li&gt;Include links to other URIs so that they can discover more things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt; The Four Rules Applied&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Instead of using application-specific identifiers—database keys, UUIDs, incremental numbers, etc.—you map them to a set of URIs. Each identifier must map to one single URI. For example, each row of those two tables is now uniquely identifiable using its URI.&lt;/li&gt;
  &lt;li&gt;Make your URIs dereferenceable. This means, roughly, to make them accessible via HTTP as we do for every human-readable Web page. This is a key aspect of Linked Data: every single row of our tables is now fetch able and uniquely identifiable anywhere on the Web.&lt;/li&gt;
  &lt;li&gt;Have our web server reply with some structured data when invoked. This is the Semantic Web “juicy” part. Model your data with RDF. Here is where you need to perform a paradigm shift from a relational data model to a graph one.&lt;/li&gt;
  &lt;li&gt;Once all the rows of our tables have been uniquely identified, made dereferenceable through HTTP, and described with RDF, the last step is providing links between different rows across different tables. The main aim here is to make explicit those links that were implicit before shifting to the Linked data approach.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Semantic Web" /><category term="Semantic Web" /><category term="Knowledge Representation" /><category term="Linked Data" /><summary>In the same way that Web 1.0 abstracted away the network and physical layers, the Semantic Web abstracts away the document and application layers involved in the exchange of information. The Semantic Web connects facts, so that rather than linking to a specific document or application</summary></entry><entry><title>Automatic Wordpress Thumbnails</title><link href="http://127.0.0.1:4000/how-to-extract-a-post-first-image,-add-it-to-the-media-library-and-assign-it-as-a-post-thumbnail-in-wordpress/" rel="alternate" type="text/html" title="Automatic Wordpress Thumbnails" /><published>2013-10-23T00:00:00+01:00</published><updated>2013-10-23T00:00:00+01:00</updated><id>http://127.0.0.1:4000/how-to-extract-a-post-first-image,-add-it-to-the-media-library-and-assign-it-as-a-post-thumbnail-in-wordpress</id><content type="html" xml:base="http://127.0.0.1:4000/how-to-extract-a-post-first-image,-add-it-to-the-media-library-and-assign-it-as-a-post-thumbnail-in-wordpress/">&lt;p&gt;It happens very often that you design your WordPress theme without a need to utilize thumbnails. But, what happens if you eventually need them?! The effort of manually assigning posts thumbnails is huge. In this post, we will examine how we can extract the first image of a post, add that image to the WordPress media library and finally assign that image to be the default thumbnail. I did run this code in a separate PHP file in the root of my domain. &lt;a href=&quot;http://wordpress.stackexchange.com/questions/47049/what-is-the-correct-way-to-use-wordpress-functions-outside-wordpress-files&quot;&gt;You need to provide access to your WordPress installation though&lt;/a&gt;. In the first step, we first need to fetch all the posts that wee need to inspect. In my snippet i specified that i need to search for &lt;strong&gt;posts&lt;/strong&gt; that have been &lt;strong&gt;p&lt;/strong&gt;&lt;strong&gt;ublished. &lt;/strong&gt;You can change these parameters to include drafts, pending posts, pages and so on.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;publish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;posts_per_page&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; We have found &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; posts&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, we need to loop through all the posts and start searching. To look for all images in a post we perform a &lt;code class=&quot;highlighter-rouge&quot;&gt;preg_match_all&lt;/code&gt; on the post’s content.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setup_postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Print out the title of the post being examined
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;ob_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ob_end_clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_match_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&amp;lt;img.+src=[\&#39;&quot;]([^\&#39;&quot;]+)[\&#39;&quot;].*&amp;gt;/i&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Check if image is on the same domain
&lt;/span&gt;        &lt;span class=&quot;nv&quot;&gt;$isSameDomain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ahmadassaf.com&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Check if an image was found, you can add the boolean of the first domain &amp;amp;&amp;amp; $isSameDomain
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$attachment_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_attachment_id_from_src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;set_post_thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$attachment_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set_featured_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;medium&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;set-the-featured-image&quot;&gt;Set the Featured Image&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_featured_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$wp_filetype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_check_filetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$attachment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_mime_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wp_filetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_title&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/\.[^.]+$/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_content&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;inherit&#39;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_insert_attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// you must first include the image.php file
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// for the function wp_generate_attachment_metadata() to work
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;require_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ABSPATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wp-admin&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/includes/image.php&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$attach_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_generate_attachment_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;$attach_data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// set as featured image
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update_post_meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;_thumbnail_id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Featured Image Set (Y)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;get-the-attachment-id&quot;&gt;Get the Attachment ID&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_attachment_id_from_src&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$image_src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT ID FROM &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; WHERE guid=&#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$image_src&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get_var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-code&quot;&gt;The Code&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Include Wordpress main file to be able to access WP functions
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;blog/wp-load.php&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Define the scope of the search for posts, pages (published, drafts ... )
&lt;/span&gt;    &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pending&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;posts_per_page&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; We have found &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; posts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;setup_postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Print out the title of the post being examined
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;ob_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ob_end_clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_match_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&amp;lt;img.+src=[\&#39;&quot;]([^\&#39;&quot;]+)[\&#39;&quot;].*&amp;gt;/i&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Check if image is on the same domain
&lt;/span&gt;        &lt;span class=&quot;nv&quot;&gt;$isSameDomain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strpos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ahmadassaf.com&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Check if an image was found, you can add the boolean of the first domain &amp;amp;&amp;amp; $isSameDomain
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$attachment_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_attachment_id_from_src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$first_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;set_post_thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$attachment_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set_featured_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;medium&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_featured_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$wp_filetype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_check_filetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$attachment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_mime_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wp_filetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_title&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/\.[^.]+$/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_content&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;inherit&#39;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_insert_attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// you must first include the image.php file
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// for the function wp_generate_attachment_metadata() to work
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;require_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ABSPATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wp-admin&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/includes/image.php&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$attach_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_generate_attachment_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;$attach_data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// set as featured image
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update_post_meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;_thumbnail_id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attach_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Featured Image Set (Y)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_attachment_id_from_src&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$image_src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT ID FROM &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; WHERE guid=&#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$image_src&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get_var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><category term="web development" /><category term="Wordpress" /><category term="PHP" /><summary>It happens very often that you design your WordPress theme without a need to utilise thumbnails. But, what happens if you eventually need them?! The effort of manually assigning posts thumbnails is huge. In this post, we will examine how we can extract the first image of a post, add that image to the WordPress media library and finally assign that image to be the default thumbnail</summary></entry><entry><title>Search Wordpress Posts</title><link href="http://127.0.0.1:4000/how-to-search-all-your-wordpress-posts-for-certain-characters-strings-or-codes/" rel="alternate" type="text/html" title="Search Wordpress Posts" /><published>2013-10-22T00:00:00+01:00</published><updated>2013-10-22T00:00:00+01:00</updated><id>http://127.0.0.1:4000/how-to-search-all-your-wordpress-posts-for-certain-characters-strings-or-codes</id><content type="html" xml:base="http://127.0.0.1:4000/how-to-search-all-your-wordpress-posts-for-certain-characters-strings-or-codes/">&lt;p&gt;During my many trials to start a useful blog, i have tried a handful of plugins and extensions that do all sort of stuff. However, after a while, especially when i became more and more familiar with PHP and WordPress, i decided to dump lots of these plugins and go with self developed tailored functions. Unfortunately, uninstalling these plugins did not solve all my problems. Some of them did actually insert some special markup to my posts ( mostly logos and links, for example the &lt;a href=&quot;http://wordpress.org/plugins/zemanta/&quot;&gt;Zemanta Plugin&lt;/a&gt; ). I decided that i had to clean up my posts from such ‘malicious’ markup. So i had to first of all to find the infected posts. To do so, i did write a small snippet that will run and search for several posts that contain specific strings, or characters or codes. I did run this code in a separate PHP file in the root of my domain. &lt;a href=&quot;http://wordpress.stackexchange.com/questions/47049/what-is-the-correct-way-to-use-wordpress-functions-outside-wordpress-files&quot;&gt;You need to provide access to your WordPress installation though&lt;/a&gt;. In the first step, we first need to fetch all the posts that wee need to inspect. In my snippet i specified that i need to search for &lt;strong&gt;posts&lt;/strong&gt; that have been &lt;strong&gt;published&lt;/strong&gt;. You can change these parameters to include drafts, pending posts, pages and so on.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;publish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;posts_per_page&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; We have found &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; posts&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, we need to loop through all the posts and start searching&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setup_postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ob_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ob_end_clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;zemanta-pixie&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post_categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_get_post_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;miscellaneous&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;We have found code in post: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; name: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &amp;lt;a href=YOUR-WORDPRESS-ADDRESS/wp-admin/post.php?post=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;action=edit&#39;&amp;gt;Link&amp;lt;/a&amp;gt;&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

The search part happens in the string matching, you can change the string to whatever you want to look for:

```php
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;zemanta-pixie&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can perform a set of secondary sanity checks if you wish, i have included some just in case. For example, i am checking if the post found is not a specific category “miscellaneous” and that that the post belongs to only ONE category.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$post_categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_get_post_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;miscellaneous&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally, when we output the link you have to fill in the corresponding WordPress Installation URL so that you will be able to directly edit the post.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;YOUR-WORDPRESS-ADDRESS/wp-admin/post.php?post=&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;. $&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post-&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;ID.&quot;&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;action=edit&#39;&amp;gt;Link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, if you are searching for specific HTML tags in your post then you only need to change the search line to become:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_match_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&amp;lt;blockquote.*&amp;gt;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;where we look for the existence of &lt;code class=&quot;highlighter-rouge&quot;&gt;blockquote&lt;/code&gt; tags.&lt;/p&gt;

&lt;h2 id=&quot;the-code&quot;&gt;The code&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Include Wordpress main file to be able to access WP functions
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;blog/wp-load.php&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Define the scope of the search for posts, pages (published, drafts ... )
&lt;/span&gt;    &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_type&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;post_status&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;publish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;posts_per_page&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; We have found &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; posts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Simple counter to check the number of &quot;infected&quot; posts
&lt;/span&gt;    &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Start the WP loop in order to check posts
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$posts_array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setup_postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;ob_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ob_end_clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Here we define the search parameters .. you can specify HTML tags here
&lt;/span&gt;        &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_match_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&amp;lt;blockquote.*&amp;gt;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// You can specify a set of characters or Strings here
&lt;/span&gt;        &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;zemanta-pixie&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$post_categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wp_get_post_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Another type of filtering .. checking post categories and number of posts
&lt;/span&gt;        &lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;in_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;miscellaneous&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$post_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;We have found code in post: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; name: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &amp;lt;a href=&#39;http://ahmadassaf.com/blog/wp-admin/post.php?post=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;action=edit&#39;&amp;gt;Link&amp;lt;/a&amp;gt;&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Total of: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><category term="web development" /><category term="Wordpress" /><category term="PHP" /><summary>During my many trials to start a useful blog, i have tried a handful of plugins and extensions that do all sort of stuff. However, after a while, especially when i became more and more familiar with PHP and WordPress, i decided to dump lots of these plugins and go with self developed tailored functions</summary></entry><entry><title>How to get all the tags for a WordPress Category ?</title><link href="http://127.0.0.1:4000/how-to-get-all-the-tags-for-a-wordpress-category/" rel="alternate" type="text/html" title="How to get all the tags for a WordPress Category ?" /><published>2013-10-11T00:00:00+01:00</published><updated>2013-10-11T00:00:00+01:00</updated><id>http://127.0.0.1:4000/how-to-get-all-the-tags-for-a-wordpress-category</id><content type="html" xml:base="http://127.0.0.1:4000/how-to-get-all-the-tags-for-a-wordpress-category/">&lt;p&gt;For various reasons, one might want to get all the categories that are assigned for the posts in a certain category. This snippet below will allow to do just that. What i did is simply putting that in the &lt;code class=&quot;highlighter-rouge&quot;&gt;functions&lt;/code&gt; and then you get to call that function anywhere in the code. The parameter that you need to pass is the category ID. Please note that the table names that you have may have different prefix, the default is the &lt;code class=&quot;highlighter-rouge&quot;&gt;wp_&lt;/code&gt; and that we pull in the tags from &lt;code class=&quot;highlighter-rouge&quot;&gt;published&lt;/code&gt; posts only. You can change that by changing the post status parameter. This code retrieves the tags based on the number of their occurrences in the posts in &lt;strong&gt;DESCENDING&lt;/strong&gt; order. You can change that as well by changing the order to &lt;code class=&quot;highlighter-rouge&quot;&gt;ASC&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_category_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wpdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get_results&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
            SELECT DISTINCT terms2.term_id as tag_id, terms2.name as tag_name, t2.count as posts_with_tag
            FROM
            wp_posts as p1
            LEFT JOIN wp_term_relationships as r1 ON p1.ID = r1.object_ID
            LEFT JOIN wp_term_taxonomy as t1 ON r1.term_taxonomy_id = t1.term_taxonomy_id
            LEFT JOIN wp_terms as terms1 ON t1.term_id = terms1.term_id,

            wp_posts as p2
            LEFT JOIN wp_term_relationships as r2 ON p2.ID = r2.object_ID
            LEFT JOIN wp_term_taxonomy as t2 ON r2.term_taxonomy_id = t2.term_taxonomy_id
            LEFT JOIN wp_terms as terms2 ON t2.term_id = terms2.term_id
            WHERE
            t1.taxonomy = &#39;category&#39; AND p1.post_status = &#39;publish&#39; AND terms1.term_id IN (&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;) AND
            t2.taxonomy = &#39;post_tag&#39; AND p2.post_status = &#39;publish&#39;
            AND p1.ID = p2.ID
            ORDER by posts_with_tag DESC
            &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><category term="web development" /><category term="Wordpress" /><category term="PHP" /><summary>For various reasons, one might want to get all the categories that are assigned for the posts in a certain category. In this post, you will get to know a code snippet that will do just that</summary></entry></feed>
